
# This file has been auto-generated for go1.18 gccgo (GCC) 12.1.0.
# To re-generate navigate to Unikraft application folder
#   $ make prepare
#   $ cd build/libgo/origin
#   $ mkdir gccbuild
#   $ cd gccbuild
#   $ ../gcc-$(LIBGCC_VERSION)/configure --disable-multilib --enable-languages=c,c++,go
#   $ make V=1 -j`nproc`| tee build.log
#   $ $(LIBGO_BASE)/extract_packages.py
#
$(LIBGO_BUILD)/golang.org/x/xerrors/internal.o: $(LIBGO_EXTRACTED)/go/golang.org/x/xerrors/internal/internal.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/goos.o: $(LIBGO_EXTRACTED)/go/internal/goos/goos.go $(LIBGO_BASE)/generated/zgoos.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/goversion.o: $(LIBGO_EXTRACTED)/go/internal/goversion/goversion.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/cfg.o: $(LIBGO_EXTRACTED)/go/internal/cfg/cfg.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/goarch.o: $(LIBGO_EXTRACTED)/go/internal/goarch/goarch.go $(LIBGO_BASE)/generated/zgoarch.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/encoding.o: $(LIBGO_EXTRACTED)/go/encoding/encoding.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/nettrace.o: $(LIBGO_EXTRACTED)/go/internal/nettrace/nettrace.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/reflect/internal/example1.o: $(LIBGO_EXTRACTED)/go/reflect/internal/example1/example.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/goexperiment.o: $(LIBGO_EXTRACTED)/go/internal/goexperiment/exp_fieldtrack_on.go $(LIBGO_EXTRACTED)/go/internal/goexperiment/exp_heapminimum512kib_off.go $(LIBGO_EXTRACTED)/go/internal/goexperiment/exp_pacerredesign_off.go $(LIBGO_EXTRACTED)/go/internal/goexperiment/exp_preemptibleloops_off.go $(LIBGO_EXTRACTED)/go/internal/goexperiment/exp_regabiargs_off.go $(LIBGO_EXTRACTED)/go/internal/goexperiment/exp_regabireflect_off.go $(LIBGO_EXTRACTED)/go/internal/goexperiment/exp_regabiwrappers_off.go $(LIBGO_EXTRACTED)/go/internal/goexperiment/exp_staticlockranking_off.go $(LIBGO_EXTRACTED)/go/internal/goexperiment/exp_unified_off.go $(LIBGO_EXTRACTED)/go/internal/goexperiment/flags.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/reflect/internal/example2.o: $(LIBGO_EXTRACTED)/go/reflect/internal/example2/example.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/unsafeheader.o: $(LIBGO_EXTRACTED)/go/internal/unsafeheader/unsafeheader.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/abi.o: $(LIBGO_EXTRACTED)/go/internal/abi/abi.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/runtime/internal/syscall.o: $(LIBGO_EXTRACTED)/go/runtime/internal/syscall/syscall_linux.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/crypto/cryptobyte/asn1.o: $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/cryptobyte/asn1/asn1.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/race.o: $(LIBGO_EXTRACTED)/go/internal/race/doc.go $(LIBGO_EXTRACTED)/go/internal/race/norace.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/crypto/internal/subtle.o: $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/internal/subtle/aliasing.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/internal/subtle.o: $(LIBGO_EXTRACTED)/go/crypto/internal/subtle/aliasing.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/itoa.o: $(LIBGO_EXTRACTED)/go/internal/itoa/itoa.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/subtle.o: $(LIBGO_EXTRACTED)/go/crypto/subtle/constant_time.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/sync/atomic.o: $(LIBGO_EXTRACTED)/go/sync/atomic/doc.go $(LIBGO_EXTRACTED)/go/sync/atomic/unaligned.go $(LIBGO_EXTRACTED)/go/sync/atomic/value.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/container/ring.o: $(LIBGO_EXTRACTED)/go/container/ring/ring.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/unicode/utf16.o: $(LIBGO_EXTRACTED)/go/unicode/utf16/utf16.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/runtime/internal/math.o: $(LIBGO_EXTRACTED)/go/runtime/internal/math/math.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/container/list.o: $(LIBGO_EXTRACTED)/go/container/list/list.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/runtime/internal/atomic.o: $(LIBGO_EXTRACTED)/go/runtime/internal/atomic/doc.go $(LIBGO_EXTRACTED)/go/runtime/internal/atomic/gccgo.go $(LIBGO_EXTRACTED)/go/runtime/internal/atomic/stubs.go $(LIBGO_EXTRACTED)/go/runtime/internal/atomic/types.go $(LIBGO_EXTRACTED)/go/runtime/internal/atomic/types_64bit.go $(LIBGO_EXTRACTED)/go/runtime/internal/atomic/unaligned.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-compiling-runtime -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/runtime/internal/sys.o: $(LIBGO_EXTRACTED)/go/runtime/internal/sys/consts.go $(LIBGO_EXTRACTED)/go/runtime/internal/sys/intrinsics.go $(LIBGO_EXTRACTED)/go/runtime/internal/sys/intrinsics_common.go $(LIBGO_EXTRACTED)/go/runtime/internal/sys/sys.go $(LIBGO_BASE)/generated/version.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-compiling-runtime -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/math/bits.o: $(LIBGO_EXTRACTED)/go/math/bits/bits.go $(LIBGO_EXTRACTED)/go/math/bits/bits_errors.go $(LIBGO_EXTRACTED)/go/math/bits/bits_tables.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/cpu.o: $(LIBGO_EXTRACTED)/go/internal/cpu/cpu.go $(LIBGO_EXTRACTED)/go/internal/cpu/cpu_x86.go $(LIBGO_BASE)/generated/cpugen.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/hash/maphash.o: $(LIBGO_EXTRACTED)/go/hash/maphash/maphash.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/unicode/utf8.o: $(LIBGO_EXTRACTED)/go/unicode/utf8/utf8.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/image/color.o: $(LIBGO_EXTRACTED)/go/image/color/color.go $(LIBGO_EXTRACTED)/go/image/color/ycbcr.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/bytealg.o: $(LIBGO_EXTRACTED)/go/internal/bytealg/bytealg.go $(LIBGO_EXTRACTED)/go/internal/bytealg/compare_native.go $(LIBGO_EXTRACTED)/go/internal/bytealg/count_generic.go $(LIBGO_EXTRACTED)/go/internal/bytealg/equal_generic.go $(LIBGO_EXTRACTED)/go/internal/bytealg/equal_native.go $(LIBGO_EXTRACTED)/go/internal/bytealg/gccgo.go $(LIBGO_EXTRACTED)/go/internal/bytealg/index_native.go $(LIBGO_EXTRACTED)/go/internal/bytealg/indexbyte_native.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/image/color/palette.o: $(LIBGO_EXTRACTED)/go/image/color/palette/generate.go $(LIBGO_EXTRACTED)/go/image/color/palette/palette.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/math.o: $(LIBGO_EXTRACTED)/go/math/abs.go $(LIBGO_EXTRACTED)/go/math/acosh.go $(LIBGO_EXTRACTED)/go/math/asin.go $(LIBGO_EXTRACTED)/go/math/asinh.go $(LIBGO_EXTRACTED)/go/math/atan.go $(LIBGO_EXTRACTED)/go/math/atan2.go $(LIBGO_EXTRACTED)/go/math/atanh.go $(LIBGO_EXTRACTED)/go/math/bits.go $(LIBGO_EXTRACTED)/go/math/cbrt.go $(LIBGO_EXTRACTED)/go/math/const.go $(LIBGO_EXTRACTED)/go/math/copysign.go $(LIBGO_EXTRACTED)/go/math/dim.go $(LIBGO_EXTRACTED)/go/math/dim_noasm.go $(LIBGO_EXTRACTED)/go/math/erf.go $(LIBGO_EXTRACTED)/go/math/erfinv.go $(LIBGO_EXTRACTED)/go/math/exp.go $(LIBGO_EXTRACTED)/go/math/exp2_noasm.go $(LIBGO_EXTRACTED)/go/math/exp_amd64.go $(LIBGO_EXTRACTED)/go/math/exp_noasm.go $(LIBGO_EXTRACTED)/go/math/expm1.go $(LIBGO_EXTRACTED)/go/math/floor.go $(LIBGO_EXTRACTED)/go/math/floor_noasm.go $(LIBGO_EXTRACTED)/go/math/fma.go $(LIBGO_EXTRACTED)/go/math/frexp.go $(LIBGO_EXTRACTED)/go/math/gamma.go $(LIBGO_EXTRACTED)/go/math/hypot.go $(LIBGO_EXTRACTED)/go/math/j0.go $(LIBGO_EXTRACTED)/go/math/j1.go $(LIBGO_EXTRACTED)/go/math/jn.go $(LIBGO_EXTRACTED)/go/math/ldexp.go $(LIBGO_EXTRACTED)/go/math/lgamma.go $(LIBGO_EXTRACTED)/go/math/log.go $(LIBGO_EXTRACTED)/go/math/log10.go $(LIBGO_EXTRACTED)/go/math/log1p.go $(LIBGO_EXTRACTED)/go/math/logb.go $(LIBGO_EXTRACTED)/go/math/mod.go $(LIBGO_EXTRACTED)/go/math/modf.go $(LIBGO_EXTRACTED)/go/math/modf_noasm.go $(LIBGO_EXTRACTED)/go/math/nextafter.go $(LIBGO_EXTRACTED)/go/math/pow.go $(LIBGO_EXTRACTED)/go/math/pow10.go $(LIBGO_EXTRACTED)/go/math/remainder.go $(LIBGO_EXTRACTED)/go/math/signbit.go $(LIBGO_EXTRACTED)/go/math/sin.go $(LIBGO_EXTRACTED)/go/math/sincos.go $(LIBGO_EXTRACTED)/go/math/sinh.go $(LIBGO_EXTRACTED)/go/math/sqrt.go $(LIBGO_EXTRACTED)/go/math/stubs.go $(LIBGO_EXTRACTED)/go/math/tan.go $(LIBGO_EXTRACTED)/go/math/tanh.go $(LIBGO_EXTRACTED)/go/math/trig_reduce.go $(LIBGO_EXTRACTED)/go/math/unsafe.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/math/cmplx.o: $(LIBGO_EXTRACTED)/go/math/cmplx/abs.go $(LIBGO_EXTRACTED)/go/math/cmplx/asin.go $(LIBGO_EXTRACTED)/go/math/cmplx/conj.go $(LIBGO_EXTRACTED)/go/math/cmplx/exp.go $(LIBGO_EXTRACTED)/go/math/cmplx/isinf.go $(LIBGO_EXTRACTED)/go/math/cmplx/isnan.go $(LIBGO_EXTRACTED)/go/math/cmplx/log.go $(LIBGO_EXTRACTED)/go/math/cmplx/phase.go $(LIBGO_EXTRACTED)/go/math/cmplx/polar.go $(LIBGO_EXTRACTED)/go/math/cmplx/pow.go $(LIBGO_EXTRACTED)/go/math/cmplx/rect.go $(LIBGO_EXTRACTED)/go/math/cmplx/sin.go $(LIBGO_EXTRACTED)/go/math/cmplx/sqrt.go $(LIBGO_EXTRACTED)/go/math/cmplx/tan.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/unicode.o: $(LIBGO_EXTRACTED)/go/unicode/casetables.go $(LIBGO_EXTRACTED)/go/unicode/digit.go $(LIBGO_EXTRACTED)/go/unicode/graphic.go $(LIBGO_EXTRACTED)/go/unicode/letter.go $(LIBGO_EXTRACTED)/go/unicode/tables.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/runtime.o: $(LIBGO_EXTRACTED)/go/runtime/alg.go $(LIBGO_EXTRACTED)/go/runtime/asan0.go $(LIBGO_EXTRACTED)/go/runtime/atomic_pointer.go $(LIBGO_EXTRACTED)/go/runtime/cgo_gccgo.go $(LIBGO_EXTRACTED)/go/runtime/cgocall.go $(LIBGO_EXTRACTED)/go/runtime/cgocheck.go $(LIBGO_EXTRACTED)/go/runtime/chan.go $(LIBGO_EXTRACTED)/go/runtime/compiler.go $(LIBGO_EXTRACTED)/go/runtime/cpuprof.go $(LIBGO_EXTRACTED)/go/runtime/cputicks.go $(LIBGO_EXTRACTED)/go/runtime/debug.go $(LIBGO_EXTRACTED)/go/runtime/debuglog.go $(LIBGO_EXTRACTED)/go/runtime/debuglog_off.go $(LIBGO_EXTRACTED)/go/runtime/env_posix.go $(LIBGO_EXTRACTED)/go/runtime/eqtype.go $(LIBGO_EXTRACTED)/go/runtime/error.go $(LIBGO_EXTRACTED)/go/runtime/extern.go $(LIBGO_EXTRACTED)/go/runtime/fastlog2.go $(LIBGO_EXTRACTED)/go/runtime/fastlog2table.go $(LIBGO_EXTRACTED)/go/runtime/ffi.go $(LIBGO_EXTRACTED)/go/runtime/float.go $(LIBGO_EXTRACTED)/go/runtime/hash64.go $(LIBGO_EXTRACTED)/go/runtime/heapdump.go $(LIBGO_EXTRACTED)/go/runtime/histogram.go $(LIBGO_EXTRACTED)/go/runtime/iface.go $(LIBGO_EXTRACTED)/go/runtime/lfstack.go $(LIBGO_EXTRACTED)/go/runtime/lfstack_64bit.go $(LIBGO_EXTRACTED)/go/runtime/lock_futex.go $(LIBGO_EXTRACTED)/go/runtime/lockrank.go $(LIBGO_EXTRACTED)/go/runtime/lockrank_off.go $(LIBGO_EXTRACTED)/go/runtime/malloc.go $(LIBGO_EXTRACTED)/go/runtime/map.go $(LIBGO_EXTRACTED)/go/runtime/map_fast32.go $(LIBGO_EXTRACTED)/go/runtime/map_fast64.go $(LIBGO_EXTRACTED)/go/runtime/map_faststr.go $(LIBGO_EXTRACTED)/go/runtime/mbarrier.go $(LIBGO_EXTRACTED)/go/runtime/mbitmap.go $(LIBGO_EXTRACTED)/go/runtime/mcache.go $(LIBGO_EXTRACTED)/go/runtime/mcentral.go $(LIBGO_EXTRACTED)/go/runtime/mcheckmark.go $(LIBGO_EXTRACTED)/go/runtime/mem_gccgo.go $(LIBGO_EXTRACTED)/go/runtime/metrics.go $(LIBGO_EXTRACTED)/go/runtime/mfinal.go $(LIBGO_EXTRACTED)/go/runtime/mfixalloc.go $(LIBGO_EXTRACTED)/go/runtime/mgc.go $(LIBGO_EXTRACTED)/go/runtime/mgc_gccgo.go $(LIBGO_EXTRACTED)/go/runtime/mgcmark.go $(LIBGO_EXTRACTED)/go/runtime/mgcpacer.go $(LIBGO_EXTRACTED)/go/runtime/mgcscavenge.go $(LIBGO_EXTRACTED)/go/runtime/mgcsweep.go $(LIBGO_EXTRACTED)/go/runtime/mgcwork.go $(LIBGO_EXTRACTED)/go/runtime/mheap.go $(LIBGO_EXTRACTED)/go/runtime/mpagealloc.go $(LIBGO_EXTRACTED)/go/runtime/mpagealloc_64bit.go $(LIBGO_EXTRACTED)/go/runtime/mpagecache.go $(LIBGO_EXTRACTED)/go/runtime/mpallocbits.go $(LIBGO_EXTRACTED)/go/runtime/mprof.go $(LIBGO_EXTRACTED)/go/runtime/mranges.go $(LIBGO_EXTRACTED)/go/runtime/msan0.go $(LIBGO_EXTRACTED)/go/runtime/msize.go $(LIBGO_EXTRACTED)/go/runtime/mspanset.go $(LIBGO_EXTRACTED)/go/runtime/mstats.go $(LIBGO_EXTRACTED)/go/runtime/mwbbuf.go $(LIBGO_EXTRACTED)/go/runtime/nbpipe_pipe2.go $(LIBGO_EXTRACTED)/go/runtime/netpoll.go $(LIBGO_EXTRACTED)/go/runtime/netpoll_epoll.go $(LIBGO_EXTRACTED)/go/runtime/os_gccgo.go $(LIBGO_EXTRACTED)/go/runtime/os_linux.go $(LIBGO_EXTRACTED)/go/runtime/os_linux_noauxv.go $(LIBGO_EXTRACTED)/go/runtime/panic.go $(LIBGO_EXTRACTED)/go/runtime/preempt.go $(LIBGO_EXTRACTED)/go/runtime/preempt_nonwindows.go $(LIBGO_EXTRACTED)/go/runtime/print.go $(LIBGO_EXTRACTED)/go/runtime/proc.go $(LIBGO_EXTRACTED)/go/runtime/profbuf.go $(LIBGO_EXTRACTED)/go/runtime/proflabel.go $(LIBGO_EXTRACTED)/go/runtime/race0.go $(LIBGO_EXTRACTED)/go/runtime/rdebug.go $(LIBGO_EXTRACTED)/go/runtime/relax_stub.go $(LIBGO_EXTRACTED)/go/runtime/runtime.go $(LIBGO_EXTRACTED)/go/runtime/runtime1.go $(LIBGO_EXTRACTED)/go/runtime/runtime2.go $(LIBGO_EXTRACTED)/go/runtime/rwmutex.go $(LIBGO_EXTRACTED)/go/runtime/select.go $(LIBGO_EXTRACTED)/go/runtime/sema.go $(LIBGO_EXTRACTED)/go/runtime/signal_gccgo.go $(LIBGO_EXTRACTED)/go/runtime/signal_unix.go $(LIBGO_EXTRACTED)/go/runtime/sigqueue.go $(LIBGO_EXTRACTED)/go/runtime/sigqueue_note.go $(LIBGO_EXTRACTED)/go/runtime/sizeclasses.go $(LIBGO_EXTRACTED)/go/runtime/slice.go $(LIBGO_EXTRACTED)/go/runtime/string.go $(LIBGO_EXTRACTED)/go/runtime/stubs.go $(LIBGO_EXTRACTED)/go/runtime/stubs2.go $(LIBGO_EXTRACTED)/go/runtime/stubs3.go $(LIBGO_EXTRACTED)/go/runtime/stubs_linux.go $(LIBGO_EXTRACTED)/go/runtime/symtab.go $(LIBGO_EXTRACTED)/go/runtime/time.go $(LIBGO_EXTRACTED)/go/runtime/time_nofake.go $(LIBGO_EXTRACTED)/go/runtime/timestub.go $(LIBGO_EXTRACTED)/go/runtime/timestub2.go $(LIBGO_EXTRACTED)/go/runtime/tls_stub.go $(LIBGO_EXTRACTED)/go/runtime/trace.go $(LIBGO_EXTRACTED)/go/runtime/traceback_gccgo.go $(LIBGO_EXTRACTED)/go/runtime/type.go $(LIBGO_EXTRACTED)/go/runtime/typekind.go $(LIBGO_EXTRACTED)/go/runtime/utf8.go $(LIBGO_EXTRACTED)/go/runtime/write_err.go $(LIBGO_BASE)/generated/runtime_linknames.go $(LIBGO_BASE)/generated/runtime_sysinfo.go $(LIBGO_BASE)/generated/sigtab.go $(LIBGO_BASE)/generated/goroot.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-c-header=runtime.inc.raw -fgo-compiling-runtime -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/runtime/metrics.o: $(LIBGO_EXTRACTED)/go/runtime/metrics/description.go $(LIBGO_EXTRACTED)/go/runtime/metrics/doc.go $(LIBGO_EXTRACTED)/go/runtime/metrics/histogram.go $(LIBGO_EXTRACTED)/go/runtime/metrics/sample.go $(LIBGO_EXTRACTED)/go/runtime/metrics/value.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/sync.o: $(LIBGO_EXTRACTED)/go/sync/cond.go $(LIBGO_EXTRACTED)/go/sync/map.go $(LIBGO_EXTRACTED)/go/sync/mutex.go $(LIBGO_EXTRACTED)/go/sync/once.go $(LIBGO_EXTRACTED)/go/sync/pool.go $(LIBGO_EXTRACTED)/go/sync/poolqueue.go $(LIBGO_EXTRACTED)/go/sync/runtime.go $(LIBGO_EXTRACTED)/go/sync/runtime2.go $(LIBGO_EXTRACTED)/go/sync/rwmutex.go $(LIBGO_EXTRACTED)/go/sync/waitgroup.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/reflectlite.o: $(LIBGO_EXTRACTED)/go/internal/reflectlite/eqtype.go $(LIBGO_EXTRACTED)/go/internal/reflectlite/swapper.go $(LIBGO_EXTRACTED)/go/internal/reflectlite/type.go $(LIBGO_EXTRACTED)/go/internal/reflectlite/value.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/runtime/cgo.o: $(LIBGO_EXTRACTED)/go/runtime/cgo/handle.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/sysinfo.o: $(LIBGO_EXTRACTED)/go/internal/sysinfo/sysinfo.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/testlog.o: $(LIBGO_EXTRACTED)/go/internal/testlog/exit.go $(LIBGO_EXTRACTED)/go/internal/testlog/log.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/singleflight.o: $(LIBGO_EXTRACTED)/go/internal/singleflight/singleflight.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/math/rand.o: $(LIBGO_EXTRACTED)/go/math/rand/exp.go $(LIBGO_EXTRACTED)/go/math/rand/normal.go $(LIBGO_EXTRACTED)/go/math/rand/rand.go $(LIBGO_EXTRACTED)/go/math/rand/rng.go $(LIBGO_EXTRACTED)/go/math/rand/zipf.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/errors.o: $(LIBGO_EXTRACTED)/go/errors/errors.go $(LIBGO_EXTRACTED)/go/errors/wrap.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/oserror.o: $(LIBGO_EXTRACTED)/go/internal/oserror/errors.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/sort.o: $(LIBGO_EXTRACTED)/go/sort/search.go $(LIBGO_EXTRACTED)/go/sort/slice.go $(LIBGO_EXTRACTED)/go/sort/slice_go113.go $(LIBGO_EXTRACTED)/go/sort/sort.go $(LIBGO_EXTRACTED)/go/sort/zfuncversion.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/path.o: $(LIBGO_EXTRACTED)/go/path/match.go $(LIBGO_EXTRACTED)/go/path/path.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/io.o: $(LIBGO_EXTRACTED)/go/io/io.go $(LIBGO_EXTRACTED)/go/io/multi.go $(LIBGO_EXTRACTED)/go/io/pipe.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/mod/semver.o: $(LIBGO_EXTRACTED)/go/golang.org/x/mod/semver/semver.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/container/heap.o: $(LIBGO_EXTRACTED)/go/container/heap/heap.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/hash.o: $(LIBGO_EXTRACTED)/go/hash/hash.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/internal/randutil.o: $(LIBGO_EXTRACTED)/go/crypto/internal/randutil/randutil.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/hash/adler32.o: $(LIBGO_EXTRACTED)/go/hash/adler32/adler32.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/hmac.o: $(LIBGO_EXTRACTED)/go/crypto/hmac/hmac.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/hash/crc64.o: $(LIBGO_EXTRACTED)/go/hash/crc64/crc64.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/text/tabwriter.o: $(LIBGO_EXTRACTED)/go/text/tabwriter/tabwriter.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/hash/crc32.o: $(LIBGO_EXTRACTED)/go/hash/crc32/crc32.go $(LIBGO_EXTRACTED)/go/hash/crc32/crc32_generic.go $(LIBGO_EXTRACTED)/go/hash/crc32/crc32_otherarch.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/hash/fnv.o: $(LIBGO_EXTRACTED)/go/hash/fnv/fnv.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/strconv.o: $(LIBGO_EXTRACTED)/go/strconv/atob.go $(LIBGO_EXTRACTED)/go/strconv/atoc.go $(LIBGO_EXTRACTED)/go/strconv/atof.go $(LIBGO_EXTRACTED)/go/strconv/atoi.go $(LIBGO_EXTRACTED)/go/strconv/bytealg.go $(LIBGO_EXTRACTED)/go/strconv/ctoa.go $(LIBGO_EXTRACTED)/go/strconv/decimal.go $(LIBGO_EXTRACTED)/go/strconv/doc.go $(LIBGO_EXTRACTED)/go/strconv/eisel_lemire.go $(LIBGO_EXTRACTED)/go/strconv/ftoa.go $(LIBGO_EXTRACTED)/go/strconv/ftoaryu.go $(LIBGO_EXTRACTED)/go/strconv/isprint.go $(LIBGO_EXTRACTED)/go/strconv/itoa.go $(LIBGO_EXTRACTED)/go/strconv/quote.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/crypto/hkdf.o: $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/hkdf/hkdf.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/net/dns/dnsmessage.o: $(LIBGO_EXTRACTED)/go/golang.org/x/net/dns/dnsmessage/message.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/bytes.o: $(LIBGO_EXTRACTED)/go/bytes/buffer.go $(LIBGO_EXTRACTED)/go/bytes/bytes.go $(LIBGO_EXTRACTED)/go/bytes/reader.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/strings.o: $(LIBGO_EXTRACTED)/go/strings/builder.go $(LIBGO_EXTRACTED)/go/strings/clone.go $(LIBGO_EXTRACTED)/go/strings/compare.go $(LIBGO_EXTRACTED)/go/strings/reader.go $(LIBGO_EXTRACTED)/go/strings/replace.go $(LIBGO_EXTRACTED)/go/strings/search.go $(LIBGO_EXTRACTED)/go/strings/strings.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto.o: $(LIBGO_EXTRACTED)/go/crypto/crypto.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/rc4.o: $(LIBGO_EXTRACTED)/go/crypto/rc4/rc4.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/encoding/ascii85.o: $(LIBGO_EXTRACTED)/go/encoding/ascii85/ascii85.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/syscall.o: $(LIBGO_EXTRACTED)/go/syscall/asan0.go $(LIBGO_EXTRACTED)/go/syscall/dirent.go $(LIBGO_EXTRACTED)/go/syscall/endian_little.go $(LIBGO_EXTRACTED)/go/syscall/env_unix.go $(LIBGO_EXTRACTED)/go/syscall/errstr_glibc.go $(LIBGO_EXTRACTED)/go/syscall/exec_linux.go $(LIBGO_EXTRACTED)/go/syscall/exec_unix.go $(LIBGO_EXTRACTED)/go/syscall/libcall_glibc.go $(LIBGO_EXTRACTED)/go/syscall/libcall_linux.go $(LIBGO_EXTRACTED)/go/syscall/libcall_linux_amd64.go $(LIBGO_EXTRACTED)/go/syscall/libcall_linux_utimesnano.go $(LIBGO_EXTRACTED)/go/syscall/libcall_posix.go $(LIBGO_EXTRACTED)/go/syscall/libcall_posix_largefile.go $(LIBGO_EXTRACTED)/go/syscall/libcall_posix_nonhurd.go $(LIBGO_EXTRACTED)/go/syscall/libcall_support.go $(LIBGO_EXTRACTED)/go/syscall/libcall_uname.go $(LIBGO_EXTRACTED)/go/syscall/libcall_wait4.go $(LIBGO_EXTRACTED)/go/syscall/lsf_linux.go $(LIBGO_EXTRACTED)/go/syscall/msan0.go $(LIBGO_EXTRACTED)/go/syscall/net.go $(LIBGO_EXTRACTED)/go/syscall/netlink_linux.go $(LIBGO_EXTRACTED)/go/syscall/setuidgid_linux.go $(LIBGO_EXTRACTED)/go/syscall/sleep_select.go $(LIBGO_EXTRACTED)/go/syscall/sock_cloexec_linux.go $(LIBGO_EXTRACTED)/go/syscall/sockcmsg_linux.go $(LIBGO_EXTRACTED)/go/syscall/sockcmsg_unix.go $(LIBGO_EXTRACTED)/go/syscall/sockcmsg_unix_other.go $(LIBGO_EXTRACTED)/go/syscall/socket.go $(LIBGO_EXTRACTED)/go/syscall/socket_linux.go $(LIBGO_EXTRACTED)/go/syscall/socket_linux_type.go $(LIBGO_EXTRACTED)/go/syscall/socket_posix.go $(LIBGO_EXTRACTED)/go/syscall/syscall.go $(LIBGO_EXTRACTED)/go/syscall/syscall_errno.go $(LIBGO_EXTRACTED)/go/syscall/syscall_funcs.go $(LIBGO_EXTRACTED)/go/syscall/syscall_glibc.go $(LIBGO_EXTRACTED)/go/syscall/syscall_linux.go $(LIBGO_EXTRACTED)/go/syscall/syscall_linux_amd64.go $(LIBGO_EXTRACTED)/go/syscall/syscall_unix.go $(LIBGO_EXTRACTED)/go/syscall/time_nofake.go $(LIBGO_EXTRACTED)/go/syscall/timestruct.go $(LIBGO_BASE)/generated/libcalls.go $(LIBGO_BASE)/generated/sysinfo.go $(LIBGO_BASE)/generated/syscall_arch.go $(LIBGO_BASE)/generated/syscall_linknames.go $(LIBGO_BASE)/generated/epoll.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/encoding/base32.o: $(LIBGO_EXTRACTED)/go/encoding/base32/base32.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/http/internal/testcert.o: $(LIBGO_EXTRACTED)/go/net/http/internal/testcert/testcert.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/http/internal/ascii.o: $(LIBGO_EXTRACTED)/go/net/http/internal/ascii/print.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/text/transform.o: $(LIBGO_EXTRACTED)/go/golang.org/x/text/transform/transform.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/html.o: $(LIBGO_EXTRACTED)/go/html/entity.go $(LIBGO_EXTRACTED)/go/html/escape.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/build/constraint.o: $(LIBGO_EXTRACTED)/go/go/build/constraint/expr.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/bufio.o: $(LIBGO_EXTRACTED)/go/bufio/bufio.go $(LIBGO_EXTRACTED)/go/bufio/scan.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/elliptic/internal/fiat.o: $(LIBGO_EXTRACTED)/go/crypto/elliptic/internal/fiat/p224.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/internal/fiat/p224_fiat64.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/internal/fiat/p224_invert.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/internal/fiat/p384.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/internal/fiat/p384_fiat64.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/internal/fiat/p384_invert.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/internal/fiat/p521.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/internal/fiat/p521_fiat64.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/internal/fiat/p521_invert.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/compress/bzip2.o: $(LIBGO_EXTRACTED)/go/compress/bzip2/bit_reader.go $(LIBGO_EXTRACTED)/go/compress/bzip2/bzip2.go $(LIBGO_EXTRACTED)/go/compress/bzip2/huffman.go $(LIBGO_EXTRACTED)/go/compress/bzip2/move_to_front.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/regexp/syntax.o: $(LIBGO_EXTRACTED)/go/regexp/syntax/compile.go $(LIBGO_EXTRACTED)/go/regexp/syntax/doc.go $(LIBGO_EXTRACTED)/go/regexp/syntax/op_string.go $(LIBGO_EXTRACTED)/go/regexp/syntax/parse.go $(LIBGO_EXTRACTED)/go/regexp/syntax/perl_groups.go $(LIBGO_EXTRACTED)/go/regexp/syntax/prog.go $(LIBGO_EXTRACTED)/go/regexp/syntax/regexp.go $(LIBGO_EXTRACTED)/go/regexp/syntax/simplify.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/image.o: $(LIBGO_EXTRACTED)/go/image/format.go $(LIBGO_EXTRACTED)/go/image/geom.go $(LIBGO_EXTRACTED)/go/image/image.go $(LIBGO_EXTRACTED)/go/image/names.go $(LIBGO_EXTRACTED)/go/image/ycbcr.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/reflect.o: $(LIBGO_EXTRACTED)/go/reflect/deepequal.go $(LIBGO_EXTRACTED)/go/reflect/eqtype.go $(LIBGO_EXTRACTED)/go/reflect/makefunc.go $(LIBGO_EXTRACTED)/go/reflect/makefunc_ffi.go $(LIBGO_EXTRACTED)/go/reflect/swapper.go $(LIBGO_EXTRACTED)/go/reflect/type.go $(LIBGO_EXTRACTED)/go/reflect/value.go $(LIBGO_EXTRACTED)/go/reflect/visiblefields.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/syscall/execenv.o: $(LIBGO_EXTRACTED)/go/internal/syscall/execenv/execenv_default.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/os/exec/internal/fdtest.o: $(LIBGO_EXTRACTED)/go/os/exec/internal/fdtest/exists_unix.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/syscall/unix.o: $(LIBGO_EXTRACTED)/go/internal/syscall/unix/at.go $(LIBGO_EXTRACTED)/go/internal/syscall/unix/at_largefile.go $(LIBGO_EXTRACTED)/go/internal/syscall/unix/at_sysnum_linux.go $(LIBGO_EXTRACTED)/go/internal/syscall/unix/copy_file_range_linux.go $(LIBGO_EXTRACTED)/go/internal/syscall/unix/dummy.go $(LIBGO_EXTRACTED)/go/internal/syscall/unix/getrandom.go $(LIBGO_EXTRACTED)/go/internal/syscall/unix/getrandom_linux.go $(LIBGO_EXTRACTED)/go/internal/syscall/unix/net.go $(LIBGO_EXTRACTED)/go/internal/syscall/unix/nonblocking.go $(LIBGO_EXTRACTED)/go/internal/syscall/unix/sysnum_linux_amd64.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/image/internal/imageutil.o: $(LIBGO_EXTRACTED)/go/image/internal/imageutil/imageutil.go $(LIBGO_EXTRACTED)/go/image/internal/imageutil/impl.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/time/tzdata.o: $(LIBGO_EXTRACTED)/go/time/tzdata/tzdata.go $(LIBGO_EXTRACTED)/go/time/tzdata/zipdata.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/regexp.o: $(LIBGO_EXTRACTED)/go/regexp/backtrack.go $(LIBGO_EXTRACTED)/go/regexp/exec.go $(LIBGO_EXTRACTED)/go/regexp/onepass.go $(LIBGO_EXTRACTED)/go/regexp/regexp.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/image/draw.o: $(LIBGO_EXTRACTED)/go/image/draw/draw.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/time.o: $(LIBGO_EXTRACTED)/go/time/format.go $(LIBGO_EXTRACTED)/go/time/sleep.go $(LIBGO_EXTRACTED)/go/time/sys_unix.go $(LIBGO_EXTRACTED)/go/time/tick.go $(LIBGO_EXTRACTED)/go/time/time.go $(LIBGO_EXTRACTED)/go/time/zoneinfo.go $(LIBGO_EXTRACTED)/go/time/zoneinfo_read.go $(LIBGO_EXTRACTED)/go/time/zoneinfo_unix.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/image/jpeg.o: $(LIBGO_EXTRACTED)/go/image/jpeg/fdct.go $(LIBGO_EXTRACTED)/go/image/jpeg/huffman.go $(LIBGO_EXTRACTED)/go/image/jpeg/idct.go $(LIBGO_EXTRACTED)/go/image/jpeg/reader.go $(LIBGO_EXTRACTED)/go/image/jpeg/scan.go $(LIBGO_EXTRACTED)/go/image/jpeg/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/elliptic/internal/nistec.o: $(LIBGO_EXTRACTED)/go/crypto/elliptic/internal/nistec/p224.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/internal/nistec/p384.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/internal/nistec/p521.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/fmtsort.o: $(LIBGO_EXTRACTED)/go/internal/fmtsort/sort.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/context.o: $(LIBGO_EXTRACTED)/go/context/context.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/encoding/binary.o: $(LIBGO_EXTRACTED)/go/encoding/binary/binary.go $(LIBGO_EXTRACTED)/go/encoding/binary/varint.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/io/fs.o: $(LIBGO_EXTRACTED)/go/io/fs/fs.go $(LIBGO_EXTRACTED)/go/io/fs/glob.go $(LIBGO_EXTRACTED)/go/io/fs/readdir.go $(LIBGO_EXTRACTED)/go/io/fs/readfile.go $(LIBGO_EXTRACTED)/go/io/fs/stat.go $(LIBGO_EXTRACTED)/go/io/fs/sub.go $(LIBGO_EXTRACTED)/go/io/fs/walk.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/sync/semaphore.o: $(LIBGO_EXTRACTED)/go/golang.org/x/sync/semaphore/semaphore.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/embed.o: $(LIBGO_EXTRACTED)/go/embed/embed.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/poll.o: $(LIBGO_EXTRACTED)/go/internal/poll/copy_file_range_linux.go $(LIBGO_EXTRACTED)/go/internal/poll/errno_unix.go $(LIBGO_EXTRACTED)/go/internal/poll/fcntl_syscall.go $(LIBGO_EXTRACTED)/go/internal/poll/fd.go $(LIBGO_EXTRACTED)/go/internal/poll/fd_fsync_posix.go $(LIBGO_EXTRACTED)/go/internal/poll/fd_mutex.go $(LIBGO_EXTRACTED)/go/internal/poll/fd_poll_runtime.go $(LIBGO_EXTRACTED)/go/internal/poll/fd_posix.go $(LIBGO_EXTRACTED)/go/internal/poll/fd_unix.go $(LIBGO_EXTRACTED)/go/internal/poll/fd_writev_unix.go $(LIBGO_EXTRACTED)/go/internal/poll/hook_cloexec.go $(LIBGO_EXTRACTED)/go/internal/poll/hook_unix.go $(LIBGO_EXTRACTED)/go/internal/poll/iovec_unix.go $(LIBGO_EXTRACTED)/go/internal/poll/sendfile_glibc.go $(LIBGO_EXTRACTED)/go/internal/poll/sock_cloexec.go $(LIBGO_EXTRACTED)/go/internal/poll/sockopt.go $(LIBGO_EXTRACTED)/go/internal/poll/sockopt_linux.go $(LIBGO_EXTRACTED)/go/internal/poll/sockopt_unix.go $(LIBGO_EXTRACTED)/go/internal/poll/sockoptip.go $(LIBGO_EXTRACTED)/go/internal/poll/splice_linux.go $(LIBGO_EXTRACTED)/go/internal/poll/writev.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/crypto/ed25519/internal/edwards25519.o: $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/ed25519/internal/edwards25519/const.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/ed25519/internal/edwards25519/edwards25519.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/crypto/poly1305.o: $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/poly1305/bits_go1.13.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/poly1305/mac_noasm.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/poly1305/poly1305.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/poly1305/sum_generic.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/sha256.o: $(LIBGO_EXTRACTED)/go/crypto/sha256/sha256.go $(LIBGO_EXTRACTED)/go/crypto/sha256/sha256block.go $(LIBGO_EXTRACTED)/go/crypto/sha256/sha256block_generic.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/crypto/internal/poly1305.o: $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/internal/poly1305/bits_go1.13.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/internal/poly1305/mac_noasm.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/internal/poly1305/poly1305.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/internal/poly1305/sum_generic.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/ed25519/internal/edwards25519/field.o: $(LIBGO_EXTRACTED)/go/crypto/ed25519/internal/edwards25519/field/fe.go $(LIBGO_EXTRACTED)/go/crypto/ed25519/internal/edwards25519/field/fe_amd64_noasm.go $(LIBGO_EXTRACTED)/go/crypto/ed25519/internal/edwards25519/field/fe_arm64_noasm.go $(LIBGO_EXTRACTED)/go/crypto/ed25519/internal/edwards25519/field/fe_generic.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/md5.o: $(LIBGO_EXTRACTED)/go/crypto/md5/md5.go $(LIBGO_EXTRACTED)/go/crypto/md5/md5block.go $(LIBGO_EXTRACTED)/go/crypto/md5/md5block_generic.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/crypto/curve25519/internal/field.o: $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/curve25519/internal/field/fe.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/curve25519/internal/field/fe_amd64_noasm.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/curve25519/internal/field/fe_arm64_noasm.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/curve25519/internal/field/fe_generic.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/sha1.o: $(LIBGO_EXTRACTED)/go/crypto/sha1/sha1.go $(LIBGO_EXTRACTED)/go/crypto/sha1/sha1block.go $(LIBGO_EXTRACTED)/go/crypto/sha1/sha1block_generic.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/sha512.o: $(LIBGO_EXTRACTED)/go/crypto/sha512/sha512.go $(LIBGO_EXTRACTED)/go/crypto/sha512/sha512block.go $(LIBGO_EXTRACTED)/go/crypto/sha512/sha512block_generic.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/encoding/base64.o: $(LIBGO_EXTRACTED)/go/encoding/base64/base64.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/cipher.o: $(LIBGO_EXTRACTED)/go/crypto/cipher/cbc.go $(LIBGO_EXTRACTED)/go/crypto/cipher/cfb.go $(LIBGO_EXTRACTED)/go/crypto/cipher/cipher.go $(LIBGO_EXTRACTED)/go/crypto/cipher/ctr.go $(LIBGO_EXTRACTED)/go/crypto/cipher/gcm.go $(LIBGO_EXTRACTED)/go/crypto/cipher/io.go $(LIBGO_EXTRACTED)/go/crypto/cipher/ofb.go $(LIBGO_EXTRACTED)/go/crypto/cipher/xor_generic.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/index/suffixarray.o: $(LIBGO_EXTRACTED)/go/index/suffixarray/sais.go $(LIBGO_EXTRACTED)/go/index/suffixarray/sais2.go $(LIBGO_EXTRACTED)/go/index/suffixarray/suffixarray.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/encoding/pem.o: $(LIBGO_EXTRACTED)/go/encoding/pem/pem.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/aes.o: $(LIBGO_EXTRACTED)/go/crypto/aes/block.go $(LIBGO_EXTRACTED)/go/crypto/aes/cipher.go $(LIBGO_EXTRACTED)/go/crypto/aes/cipher_generic.go $(LIBGO_EXTRACTED)/go/crypto/aes/const.go $(LIBGO_EXTRACTED)/go/crypto/aes/modes.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/ed25519/internal/edwards25519.o: $(LIBGO_EXTRACTED)/go/crypto/ed25519/internal/edwards25519/doc.go $(LIBGO_EXTRACTED)/go/crypto/ed25519/internal/edwards25519/edwards25519.go $(LIBGO_EXTRACTED)/go/crypto/ed25519/internal/edwards25519/scalar.go $(LIBGO_EXTRACTED)/go/crypto/ed25519/internal/edwards25519/scalarmult.go $(LIBGO_EXTRACTED)/go/crypto/ed25519/internal/edwards25519/tables.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/des.o: $(LIBGO_EXTRACTED)/go/crypto/des/block.go $(LIBGO_EXTRACTED)/go/crypto/des/cipher.go $(LIBGO_EXTRACTED)/go/crypto/des/const.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/crypto/chacha20.o: $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/chacha20/chacha_generic.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/chacha20/chacha_noasm.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/chacha20/xor.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/crypto/chacha20poly1305.o: $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/chacha20poly1305/chacha20poly1305.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/chacha20poly1305/chacha20poly1305_generic.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/chacha20poly1305/chacha20poly1305_noasm.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/chacha20poly1305/xchacha20poly1305.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/os.o: $(LIBGO_EXTRACTED)/go/os/dir.go $(LIBGO_EXTRACTED)/go/os/dir_gccgo.go $(LIBGO_EXTRACTED)/go/os/dir_largefile.go $(LIBGO_EXTRACTED)/go/os/dir_libc_gccgo.go $(LIBGO_EXTRACTED)/go/os/env.go $(LIBGO_EXTRACTED)/go/os/error.go $(LIBGO_EXTRACTED)/go/os/error_errno.go $(LIBGO_EXTRACTED)/go/os/error_posix.go $(LIBGO_EXTRACTED)/go/os/exec.go $(LIBGO_EXTRACTED)/go/os/exec_posix.go $(LIBGO_EXTRACTED)/go/os/exec_unix.go $(LIBGO_EXTRACTED)/go/os/executable.go $(LIBGO_EXTRACTED)/go/os/executable_procfs.go $(LIBGO_EXTRACTED)/go/os/file.go $(LIBGO_EXTRACTED)/go/os/file_posix.go $(LIBGO_EXTRACTED)/go/os/file_unix.go $(LIBGO_EXTRACTED)/go/os/getwd.go $(LIBGO_EXTRACTED)/go/os/path.go $(LIBGO_EXTRACTED)/go/os/path_unix.go $(LIBGO_EXTRACTED)/go/os/pipe_glibc.go $(LIBGO_EXTRACTED)/go/os/proc.go $(LIBGO_EXTRACTED)/go/os/rawconn.go $(LIBGO_EXTRACTED)/go/os/readfrom_linux.go $(LIBGO_EXTRACTED)/go/os/removeall_at.go $(LIBGO_EXTRACTED)/go/os/stat.go $(LIBGO_EXTRACTED)/go/os/stat_atim.go $(LIBGO_EXTRACTED)/go/os/stat_unix.go $(LIBGO_EXTRACTED)/go/os/sticky_notbsd.go $(LIBGO_EXTRACTED)/go/os/str.go $(LIBGO_EXTRACTED)/go/os/sys.go $(LIBGO_EXTRACTED)/go/os/sys_linux.go $(LIBGO_EXTRACTED)/go/os/sys_unix.go $(LIBGO_EXTRACTED)/go/os/tempfile.go $(LIBGO_EXTRACTED)/go/os/types.go $(LIBGO_EXTRACTED)/go/os/types_unix.go $(LIBGO_EXTRACTED)/go/os/wait_waitid.go $(LIBGO_BASE)/generated/os_linknames.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/mod/internal/lazyregexp.o: $(LIBGO_EXTRACTED)/go/golang.org/x/mod/internal/lazyregexp/lazyre.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/godebug.o: $(LIBGO_EXTRACTED)/go/internal/godebug/godebug.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/obscuretestdata.o: $(LIBGO_EXTRACTED)/go/internal/obscuretestdata/obscuretestdata.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/io/ioutil.o: $(LIBGO_EXTRACTED)/go/io/ioutil/ioutil.go $(LIBGO_EXTRACTED)/go/io/ioutil/tempfile.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/lazyregexp.o: $(LIBGO_EXTRACTED)/go/internal/lazyregexp/lazyre.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/os/signal.o: $(LIBGO_EXTRACTED)/go/os/signal/doc.go $(LIBGO_EXTRACTED)/go/os/signal/signal.go $(LIBGO_EXTRACTED)/go/os/signal/signal_unix.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/intern.o: $(LIBGO_EXTRACTED)/go/internal/intern/intern.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/sys/cpu.o: $(LIBGO_EXTRACTED)/go/golang.org/x/sys/cpu/byteorder.go $(LIBGO_EXTRACTED)/go/golang.org/x/sys/cpu/cpu.go $(LIBGO_EXTRACTED)/go/golang.org/x/sys/cpu/cpu_gccgo_x86.go $(LIBGO_EXTRACTED)/go/golang.org/x/sys/cpu/cpu_linux_noinit.go $(LIBGO_EXTRACTED)/go/golang.org/x/sys/cpu/cpu_x86.go $(LIBGO_EXTRACTED)/go/golang.org/x/sys/cpu/hwcap_linux.go $(LIBGO_BASE)/generated/gcpugen.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/path/filepath.o: $(LIBGO_EXTRACTED)/go/path/filepath/match.go $(LIBGO_EXTRACTED)/go/path/filepath/path.go $(LIBGO_EXTRACTED)/go/path/filepath/path_unix.go $(LIBGO_EXTRACTED)/go/path/filepath/symlink.go $(LIBGO_EXTRACTED)/go/path/filepath/symlink_unix.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/fmt.o: $(LIBGO_EXTRACTED)/go/fmt/doc.go $(LIBGO_EXTRACTED)/go/fmt/errors.go $(LIBGO_EXTRACTED)/go/fmt/format.go $(LIBGO_EXTRACTED)/go/fmt/print.go $(LIBGO_EXTRACTED)/go/fmt/scan.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/goroot.o: $(LIBGO_EXTRACTED)/go/internal/goroot/gccgo.go $(LIBGO_BASE)/generated/zstdpkglist.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/netip.o: $(LIBGO_EXTRACTED)/go/net/netip/leaf_alts.go $(LIBGO_EXTRACTED)/go/net/netip/netip.go $(LIBGO_EXTRACTED)/go/net/netip/uint128.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/os/exec.o: $(LIBGO_EXTRACTED)/go/os/exec/exec.go $(LIBGO_EXTRACTED)/go/os/exec/exec_unix.go $(LIBGO_EXTRACTED)/go/os/exec/lp_unix.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/mod/sumdb/tlog.o: $(LIBGO_EXTRACTED)/go/golang.org/x/mod/sumdb/tlog/note.go $(LIBGO_EXTRACTED)/go/golang.org/x/mod/sumdb/tlog/tile.go $(LIBGO_EXTRACTED)/go/golang.org/x/mod/sumdb/tlog/tlog.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/txtar.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/txtar/archive.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/internal/lsp/fuzzy.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/internal/lsp/fuzzy/input.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/internal/lsp/fuzzy/matcher.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/internal/lsp/fuzzy/symbol.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/xerrors.o: $(LIBGO_EXTRACTED)/go/golang.org/x/xerrors/adaptor.go $(LIBGO_EXTRACTED)/go/golang.org/x/xerrors/doc.go $(LIBGO_EXTRACTED)/go/golang.org/x/xerrors/errors.go $(LIBGO_EXTRACTED)/go/golang.org/x/xerrors/fmt.go $(LIBGO_EXTRACTED)/go/golang.org/x/xerrors/format.go $(LIBGO_EXTRACTED)/go/golang.org/x/xerrors/frame.go $(LIBGO_EXTRACTED)/go/golang.org/x/xerrors/wrap.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/os/signal/internal/pty.o: $(LIBGO_EXTRACTED)/go/os/signal/internal/pty/pty.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/runtime/trace.o: $(LIBGO_EXTRACTED)/go/runtime/trace/annotation.go $(LIBGO_EXTRACTED)/go/runtime/trace/trace.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/http/internal.o: $(LIBGO_EXTRACTED)/go/net/http/internal/chunked.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/execabs.o: $(LIBGO_EXTRACTED)/go/internal/execabs/execabs.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/mime/quotedprintable.o: $(LIBGO_EXTRACTED)/go/mime/quotedprintable/reader.go $(LIBGO_EXTRACTED)/go/mime/quotedprintable/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/buildcfg.o: $(LIBGO_EXTRACTED)/go/internal/buildcfg/cfg.go $(LIBGO_EXTRACTED)/go/internal/buildcfg/exp.go $(LIBGO_BASE)/generated/buildcfg.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/compress/lzw.o: $(LIBGO_EXTRACTED)/go/compress/lzw/reader.go $(LIBGO_EXTRACTED)/go/compress/lzw/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/encoding/hex.o: $(LIBGO_EXTRACTED)/go/encoding/hex/hex.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/log.o: $(LIBGO_EXTRACTED)/go/log/log.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/debug/plan9obj.o: $(LIBGO_EXTRACTED)/go/debug/plan9obj/file.go $(LIBGO_EXTRACTED)/go/debug/plan9obj/plan9obj.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/database/sql/driver.o: $(LIBGO_EXTRACTED)/go/database/sql/driver/driver.go $(LIBGO_EXTRACTED)/go/database/sql/driver/types.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/os/user.o: $(LIBGO_EXTRACTED)/go/os/user/cgo_listgroups_unix.go $(LIBGO_EXTRACTED)/go/os/user/cgo_lookup_unix.go $(LIBGO_EXTRACTED)/go/os/user/decls_unix.go $(LIBGO_EXTRACTED)/go/os/user/getgrouplist_unix.go $(LIBGO_EXTRACTED)/go/os/user/lookup.go $(LIBGO_EXTRACTED)/go/os/user/user.go $(LIBGO_BASE)/generated/os_user_linknames.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/crypto/curve25519.o: $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/curve25519/curve25519.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/curve25519/curve25519_generic.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/curve25519/curve25519_noasm.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/encoding/csv.o: $(LIBGO_EXTRACTED)/go/encoding/csv/reader.go $(LIBGO_EXTRACTED)/go/encoding/csv/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/text/scanner.o: $(LIBGO_EXTRACTED)/go/text/scanner/scanner.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/runtime/debug.o: $(LIBGO_EXTRACTED)/go/runtime/debug/garbage.go $(LIBGO_EXTRACTED)/go/runtime/debug/mod.go $(LIBGO_EXTRACTED)/go/runtime/debug/stack.go $(LIBGO_EXTRACTED)/go/runtime/debug/stubs.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/internal/socktest.o: $(LIBGO_EXTRACTED)/go/net/internal/socktest/switch.go $(LIBGO_EXTRACTED)/go/net/internal/socktest/switch_posix.go $(LIBGO_EXTRACTED)/go/net/internal/socktest/switch_unix.go $(LIBGO_EXTRACTED)/go/net/internal/socktest/sys_cloexec.go $(LIBGO_EXTRACTED)/go/net/internal/socktest/sys_unix.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/token.o: $(LIBGO_EXTRACTED)/go/go/token/position.go $(LIBGO_EXTRACTED)/go/go/token/serialize.go $(LIBGO_EXTRACTED)/go/go/token/token.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/flag.o: $(LIBGO_EXTRACTED)/go/flag/flag.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/mod/module.o: $(LIBGO_EXTRACTED)/go/golang.org/x/mod/module/module.go $(LIBGO_EXTRACTED)/go/golang.org/x/mod/module/pseudo.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/net/http2/hpack.o: $(LIBGO_EXTRACTED)/go/golang.org/x/net/http2/hpack/encode.go $(LIBGO_EXTRACTED)/go/golang.org/x/net/http2/hpack/hpack.go $(LIBGO_EXTRACTED)/go/golang.org/x/net/http2/hpack/huffman.go $(LIBGO_EXTRACTED)/go/golang.org/x/net/http2/hpack/tables.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/mime.o: $(LIBGO_EXTRACTED)/go/mime/encodedword.go $(LIBGO_EXTRACTED)/go/mime/grammar.go $(LIBGO_EXTRACTED)/go/mime/mediatype.go $(LIBGO_EXTRACTED)/go/mime/type.go $(LIBGO_EXTRACTED)/go/mime/type_unix.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/url.o: $(LIBGO_EXTRACTED)/go/net/url/url.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/debug/gosym.o: $(LIBGO_EXTRACTED)/go/debug/gosym/pclntab.go $(LIBGO_EXTRACTED)/go/debug/gosym/symtab.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/testing/iotest.o: $(LIBGO_EXTRACTED)/go/testing/iotest/logger.go $(LIBGO_EXTRACTED)/go/testing/iotest/reader.go $(LIBGO_EXTRACTED)/go/testing/iotest/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/mod/modfile.o: $(LIBGO_EXTRACTED)/go/golang.org/x/mod/modfile/print.go $(LIBGO_EXTRACTED)/go/golang.org/x/mod/modfile/read.go $(LIBGO_EXTRACTED)/go/golang.org/x/mod/modfile/rule.go $(LIBGO_EXTRACTED)/go/golang.org/x/mod/modfile/work.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/image/gif.o: $(LIBGO_EXTRACTED)/go/image/gif/reader.go $(LIBGO_EXTRACTED)/go/image/gif/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/compress/flate.o: $(LIBGO_EXTRACTED)/go/compress/flate/deflate.go $(LIBGO_EXTRACTED)/go/compress/flate/deflatefast.go $(LIBGO_EXTRACTED)/go/compress/flate/dict_decoder.go $(LIBGO_EXTRACTED)/go/compress/flate/huffman_bit_writer.go $(LIBGO_EXTRACTED)/go/compress/flate/huffman_code.go $(LIBGO_EXTRACTED)/go/compress/flate/inflate.go $(LIBGO_EXTRACTED)/go/compress/flate/token.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/testing/quick.o: $(LIBGO_EXTRACTED)/go/testing/quick/quick.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/scanner.o: $(LIBGO_EXTRACTED)/go/go/scanner/errors.go $(LIBGO_EXTRACTED)/go/go/scanner/scanner.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/text/unicode/norm.o: $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/norm/composition.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/norm/forminfo.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/norm/input.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/norm/iter.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/norm/normalize.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/norm/readwriter.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/norm/tables13.0.0.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/norm/transform.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/norm/trie.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/text/template/parse.o: $(LIBGO_EXTRACTED)/go/text/template/parse/lex.go $(LIBGO_EXTRACTED)/go/text/template/parse/node.go $(LIBGO_EXTRACTED)/go/text/template/parse/parse.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/text/unicode/bidi.o: $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/bidi/bidi.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/bidi/bracket.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/bidi/core.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/bidi/prop.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/bidi/tables13.0.0.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/unicode/bidi/trieval.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/trace.o: $(LIBGO_EXTRACTED)/go/internal/trace/gc.go $(LIBGO_EXTRACTED)/go/internal/trace/goroutines.go $(LIBGO_EXTRACTED)/go/internal/trace/mud.go $(LIBGO_EXTRACTED)/go/internal/trace/order.go $(LIBGO_EXTRACTED)/go/internal/trace/parser.go $(LIBGO_EXTRACTED)/go/internal/trace/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/encoding/xml.o: $(LIBGO_EXTRACTED)/go/encoding/xml/marshal.go $(LIBGO_EXTRACTED)/go/encoding/xml/read.go $(LIBGO_EXTRACTED)/go/encoding/xml/typeinfo.go $(LIBGO_EXTRACTED)/go/encoding/xml/xml.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/debug/dwarf.o: $(LIBGO_EXTRACTED)/go/debug/dwarf/attr_string.go $(LIBGO_EXTRACTED)/go/debug/dwarf/buf.go $(LIBGO_EXTRACTED)/go/debug/dwarf/class_string.go $(LIBGO_EXTRACTED)/go/debug/dwarf/const.go $(LIBGO_EXTRACTED)/go/debug/dwarf/entry.go $(LIBGO_EXTRACTED)/go/debug/dwarf/line.go $(LIBGO_EXTRACTED)/go/debug/dwarf/open.go $(LIBGO_EXTRACTED)/go/debug/dwarf/tag_string.go $(LIBGO_EXTRACTED)/go/debug/dwarf/type.go $(LIBGO_EXTRACTED)/go/debug/dwarf/typeunit.go $(LIBGO_EXTRACTED)/go/debug/dwarf/unit.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/encoding/json.o: $(LIBGO_EXTRACTED)/go/encoding/json/decode.go $(LIBGO_EXTRACTED)/go/encoding/json/encode.go $(LIBGO_EXTRACTED)/go/encoding/json/fold.go $(LIBGO_EXTRACTED)/go/encoding/json/indent.go $(LIBGO_EXTRACTED)/go/encoding/json/scanner.go $(LIBGO_EXTRACTED)/go/encoding/json/stream.go $(LIBGO_EXTRACTED)/go/encoding/json/tables.go $(LIBGO_EXTRACTED)/go/encoding/json/tags.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/archive/tar.o: $(LIBGO_EXTRACTED)/go/archive/tar/common.go $(LIBGO_EXTRACTED)/go/archive/tar/format.go $(LIBGO_EXTRACTED)/go/archive/tar/reader.go $(LIBGO_EXTRACTED)/go/archive/tar/stat_actime1.go $(LIBGO_EXTRACTED)/go/archive/tar/stat_unix.go $(LIBGO_EXTRACTED)/go/archive/tar/strconv.go $(LIBGO_EXTRACTED)/go/archive/tar/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/encoding/gob.o: $(LIBGO_EXTRACTED)/go/encoding/gob/dec_helpers.go $(LIBGO_EXTRACTED)/go/encoding/gob/decode.go $(LIBGO_EXTRACTED)/go/encoding/gob/decoder.go $(LIBGO_EXTRACTED)/go/encoding/gob/doc.go $(LIBGO_EXTRACTED)/go/encoding/gob/enc_helpers.go $(LIBGO_EXTRACTED)/go/encoding/gob/encode.go $(LIBGO_EXTRACTED)/go/encoding/gob/encoder.go $(LIBGO_EXTRACTED)/go/encoding/gob/error.go $(LIBGO_EXTRACTED)/go/encoding/gob/type.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/database/sql.o: $(LIBGO_EXTRACTED)/go/database/sql/convert.go $(LIBGO_EXTRACTED)/go/database/sql/ctxutil.go $(LIBGO_EXTRACTED)/go/database/sql/sql.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/testing/fstest.o: $(LIBGO_EXTRACTED)/go/testing/fstest/mapfs.go $(LIBGO_EXTRACTED)/go/testing/fstest/testfs.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/text/secure/bidirule.o: $(LIBGO_EXTRACTED)/go/golang.org/x/text/secure/bidirule/bidirule.go $(LIBGO_EXTRACTED)/go/golang.org/x/text/secure/bidirule/bidirule10.0.0.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/compress/zlib.o: $(LIBGO_EXTRACTED)/go/compress/zlib/reader.go $(LIBGO_EXTRACTED)/go/compress/zlib/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/compress/gzip.o: $(LIBGO_EXTRACTED)/go/compress/gzip/gunzip.go $(LIBGO_EXTRACTED)/go/compress/gzip/gzip.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/math/big.o: $(LIBGO_EXTRACTED)/go/math/big/accuracy_string.go $(LIBGO_EXTRACTED)/go/math/big/arith.go $(LIBGO_EXTRACTED)/go/math/big/arith_decl_pure.go $(LIBGO_EXTRACTED)/go/math/big/decimal.go $(LIBGO_EXTRACTED)/go/math/big/doc.go $(LIBGO_EXTRACTED)/go/math/big/float.go $(LIBGO_EXTRACTED)/go/math/big/floatconv.go $(LIBGO_EXTRACTED)/go/math/big/floatmarsh.go $(LIBGO_EXTRACTED)/go/math/big/ftoa.go $(LIBGO_EXTRACTED)/go/math/big/int.go $(LIBGO_EXTRACTED)/go/math/big/intconv.go $(LIBGO_EXTRACTED)/go/math/big/intmarsh.go $(LIBGO_EXTRACTED)/go/math/big/nat.go $(LIBGO_EXTRACTED)/go/math/big/natconv.go $(LIBGO_EXTRACTED)/go/math/big/natdiv.go $(LIBGO_EXTRACTED)/go/math/big/prime.go $(LIBGO_EXTRACTED)/go/math/big/rat.go $(LIBGO_EXTRACTED)/go/math/big/ratconv.go $(LIBGO_EXTRACTED)/go/math/big/ratmarsh.go $(LIBGO_EXTRACTED)/go/math/big/roundingmode_string.go $(LIBGO_EXTRACTED)/go/math/big/sqrt.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/testing.o: $(LIBGO_EXTRACTED)/go/testing/allocs.go $(LIBGO_EXTRACTED)/go/testing/benchmark.go $(LIBGO_EXTRACTED)/go/testing/cover.go $(LIBGO_EXTRACTED)/go/testing/example.go $(LIBGO_EXTRACTED)/go/testing/fuzz.go $(LIBGO_EXTRACTED)/go/testing/match.go $(LIBGO_EXTRACTED)/go/testing/run_example.go $(LIBGO_EXTRACTED)/go/testing/testing.go $(LIBGO_EXTRACTED)/go/testing/testing_other.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/ast.o: $(LIBGO_EXTRACTED)/go/go/ast/ast.go $(LIBGO_EXTRACTED)/go/go/ast/commentmap.go $(LIBGO_EXTRACTED)/go/go/ast/filter.go $(LIBGO_EXTRACTED)/go/go/ast/import.go $(LIBGO_EXTRACTED)/go/go/ast/print.go $(LIBGO_EXTRACTED)/go/go/ast/resolve.go $(LIBGO_EXTRACTED)/go/go/ast/scope.go $(LIBGO_EXTRACTED)/go/go/ast/walk.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/archive/zip.o: $(LIBGO_EXTRACTED)/go/archive/zip/reader.go $(LIBGO_EXTRACTED)/go/archive/zip/register.go $(LIBGO_EXTRACTED)/go/archive/zip/struct.go $(LIBGO_EXTRACTED)/go/archive/zip/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/net/idna.o: $(LIBGO_EXTRACTED)/go/golang.org/x/net/idna/go118.go $(LIBGO_EXTRACTED)/go/golang.org/x/net/idna/idna10.0.0.go $(LIBGO_EXTRACTED)/go/golang.org/x/net/idna/punycode.go $(LIBGO_EXTRACTED)/go/golang.org/x/net/idna/tables13.0.0.go $(LIBGO_EXTRACTED)/go/golang.org/x/net/idna/trie.go $(LIBGO_EXTRACTED)/go/golang.org/x/net/idna/trieval.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/image/png.o: $(LIBGO_EXTRACTED)/go/image/png/paeth.go $(LIBGO_EXTRACTED)/go/image/png/reader.go $(LIBGO_EXTRACTED)/go/image/png/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/runtime/pprof.o: $(LIBGO_EXTRACTED)/go/runtime/pprof/elf.go $(LIBGO_EXTRACTED)/go/runtime/pprof/label.go $(LIBGO_EXTRACTED)/go/runtime/pprof/map.go $(LIBGO_EXTRACTED)/go/runtime/pprof/pprof.go $(LIBGO_EXTRACTED)/go/runtime/pprof/pprof_rusage.go $(LIBGO_EXTRACTED)/go/runtime/pprof/proto.go $(LIBGO_EXTRACTED)/go/runtime/pprof/protobuf.go $(LIBGO_EXTRACTED)/go/runtime/pprof/protomem.go $(LIBGO_EXTRACTED)/go/runtime/pprof/runtime.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/text/template.o: $(LIBGO_EXTRACTED)/go/text/template/doc.go $(LIBGO_EXTRACTED)/go/text/template/exec.go $(LIBGO_EXTRACTED)/go/text/template/funcs.go $(LIBGO_EXTRACTED)/go/text/template/helper.go $(LIBGO_EXTRACTED)/go/text/template/option.go $(LIBGO_EXTRACTED)/go/text/template/template.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/mod/sumdb/dirhash.o: $(LIBGO_EXTRACTED)/go/golang.org/x/mod/sumdb/dirhash/hash.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/mod/zip.o: $(LIBGO_EXTRACTED)/go/golang.org/x/mod/zip/zip.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/xcoff.o: $(LIBGO_EXTRACTED)/go/internal/xcoff/ar.go $(LIBGO_EXTRACTED)/go/internal/xcoff/file.go $(LIBGO_EXTRACTED)/go/internal/xcoff/xcoff.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/debug/pe.o: $(LIBGO_EXTRACTED)/go/debug/pe/file.go $(LIBGO_EXTRACTED)/go/debug/pe/pe.go $(LIBGO_EXTRACTED)/go/debug/pe/section.go $(LIBGO_EXTRACTED)/go/debug/pe/string.go $(LIBGO_EXTRACTED)/go/debug/pe/symbol.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/debug/macho.o: $(LIBGO_EXTRACTED)/go/debug/macho/fat.go $(LIBGO_EXTRACTED)/go/debug/macho/file.go $(LIBGO_EXTRACTED)/go/debug/macho/macho.go $(LIBGO_EXTRACTED)/go/debug/macho/reloctype.go $(LIBGO_EXTRACTED)/go/debug/macho/reloctype_string.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/internal/typeparams.o: $(LIBGO_EXTRACTED)/go/go/internal/typeparams/common.go $(LIBGO_EXTRACTED)/go/go/internal/typeparams/typeparams.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/debug/elf.o: $(LIBGO_EXTRACTED)/go/debug/elf/elf.go $(LIBGO_EXTRACTED)/go/debug/elf/file.go $(LIBGO_EXTRACTED)/go/debug/elf/reader.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/profile.o: $(LIBGO_EXTRACTED)/go/internal/profile/encode.go $(LIBGO_EXTRACTED)/go/internal/profile/filter.go $(LIBGO_EXTRACTED)/go/internal/profile/legacy_profile.go $(LIBGO_EXTRACTED)/go/internal/profile/merge.go $(LIBGO_EXTRACTED)/go/internal/profile/profile.go $(LIBGO_EXTRACTED)/go/internal/profile/proto.go $(LIBGO_EXTRACTED)/go/internal/profile/prune.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net.o: $(LIBGO_EXTRACTED)/go/net/addrselect.go $(LIBGO_EXTRACTED)/go/net/cgo_linux.go $(LIBGO_EXTRACTED)/go/net/cgo_resnew.go $(LIBGO_EXTRACTED)/go/net/cgo_socknew.go $(LIBGO_EXTRACTED)/go/net/cgo_unix.go $(LIBGO_EXTRACTED)/go/net/conf.go $(LIBGO_EXTRACTED)/go/net/dial.go $(LIBGO_EXTRACTED)/go/net/dnsclient.go $(LIBGO_EXTRACTED)/go/net/dnsclient_unix.go $(LIBGO_EXTRACTED)/go/net/dnsconfig_unix.go $(LIBGO_EXTRACTED)/go/net/error_posix.go $(LIBGO_EXTRACTED)/go/net/error_unix.go $(LIBGO_EXTRACTED)/go/net/fd_posix.go $(LIBGO_EXTRACTED)/go/net/fd_unix.go $(LIBGO_EXTRACTED)/go/net/file.go $(LIBGO_EXTRACTED)/go/net/file_unix.go $(LIBGO_EXTRACTED)/go/net/hook.go $(LIBGO_EXTRACTED)/go/net/hook_unix.go $(LIBGO_EXTRACTED)/go/net/hosts.go $(LIBGO_EXTRACTED)/go/net/interface.go $(LIBGO_EXTRACTED)/go/net/interface_linux.go $(LIBGO_EXTRACTED)/go/net/ip.go $(LIBGO_EXTRACTED)/go/net/iprawsock.go $(LIBGO_EXTRACTED)/go/net/iprawsock_posix.go $(LIBGO_EXTRACTED)/go/net/ipsock.go $(LIBGO_EXTRACTED)/go/net/ipsock_posix.go $(LIBGO_EXTRACTED)/go/net/lookup.go $(LIBGO_EXTRACTED)/go/net/lookup_unix.go $(LIBGO_EXTRACTED)/go/net/mac.go $(LIBGO_EXTRACTED)/go/net/net.go $(LIBGO_EXTRACTED)/go/net/nss.go $(LIBGO_EXTRACTED)/go/net/parse.go $(LIBGO_EXTRACTED)/go/net/pipe.go $(LIBGO_EXTRACTED)/go/net/port.go $(LIBGO_EXTRACTED)/go/net/port_unix.go $(LIBGO_EXTRACTED)/go/net/rawconn.go $(LIBGO_EXTRACTED)/go/net/sendfile_glibc.go $(LIBGO_EXTRACTED)/go/net/sock_cloexec.go $(LIBGO_EXTRACTED)/go/net/sock_linux.go $(LIBGO_EXTRACTED)/go/net/sock_posix.go $(LIBGO_EXTRACTED)/go/net/sockaddr_posix.go $(LIBGO_EXTRACTED)/go/net/sockopt_linux.go $(LIBGO_EXTRACTED)/go/net/sockopt_posix.go $(LIBGO_EXTRACTED)/go/net/sockoptip_linux.go $(LIBGO_EXTRACTED)/go/net/sockoptip_posix.go $(LIBGO_EXTRACTED)/go/net/splice_linux.go $(LIBGO_EXTRACTED)/go/net/tcpsock.go $(LIBGO_EXTRACTED)/go/net/tcpsock_posix.go $(LIBGO_EXTRACTED)/go/net/tcpsockopt_posix.go $(LIBGO_EXTRACTED)/go/net/tcpsockopt_unix.go $(LIBGO_EXTRACTED)/go/net/udpsock.go $(LIBGO_EXTRACTED)/go/net/udpsock_posix.go $(LIBGO_EXTRACTED)/go/net/unixsock.go $(LIBGO_EXTRACTED)/go/net/unixsock_posix.go $(LIBGO_EXTRACTED)/go/net/unixsock_readmsg_cmsg_cloexec.go $(LIBGO_EXTRACTED)/go/net/writev_unix.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/testenv.o: $(LIBGO_EXTRACTED)/go/internal/testenv/testenv.go $(LIBGO_EXTRACTED)/go/internal/testenv/testenv_cgo.go $(LIBGO_EXTRACTED)/go/internal/testenv/testenv_notwin.go $(LIBGO_EXTRACTED)/go/internal/testenv/testenv_unix.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/dsa.o: $(LIBGO_EXTRACTED)/go/crypto/dsa/dsa.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/lazytemplate.o: $(LIBGO_EXTRACTED)/go/internal/lazytemplate/lazytemplate.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/rand.o: $(LIBGO_EXTRACTED)/go/crypto/rand/eagain.go $(LIBGO_EXTRACTED)/go/crypto/rand/rand.go $(LIBGO_EXTRACTED)/go/crypto/rand/rand_batched.go $(LIBGO_EXTRACTED)/go/crypto/rand/rand_linux.go $(LIBGO_EXTRACTED)/go/crypto/rand/rand_unix.go $(LIBGO_EXTRACTED)/go/crypto/rand/util.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/printer.o: $(LIBGO_EXTRACTED)/go/go/printer/gobuild.go $(LIBGO_EXTRACTED)/go/go/printer/nodes.go $(LIBGO_EXTRACTED)/go/go/printer/printer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/constant.o: $(LIBGO_EXTRACTED)/go/go/constant/kind_string.go $(LIBGO_EXTRACTED)/go/go/constant/value.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/ed25519.o: $(LIBGO_EXTRACTED)/go/crypto/ed25519/ed25519.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/debug/buildinfo.o: $(LIBGO_EXTRACTED)/go/debug/buildinfo/buildinfo.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/crypto/ed25519.o: $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/ed25519/ed25519_go113.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/encoding/asn1.o: $(LIBGO_EXTRACTED)/go/encoding/asn1/asn1.go $(LIBGO_EXTRACTED)/go/encoding/asn1/common.go $(LIBGO_EXTRACTED)/go/encoding/asn1/marshal.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/mod/sumdb/note.o: $(LIBGO_EXTRACTED)/go/golang.org/x/mod/sumdb/note/note.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/rsa.o: $(LIBGO_EXTRACTED)/go/crypto/rsa/pkcs1v15.go $(LIBGO_EXTRACTED)/go/crypto/rsa/pss.go $(LIBGO_EXTRACTED)/go/crypto/rsa/rsa.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/parser.o: $(LIBGO_EXTRACTED)/go/go/parser/interface.go $(LIBGO_EXTRACTED)/go/go/parser/parser.go $(LIBGO_EXTRACTED)/go/go/parser/resolver.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/elliptic.o: $(LIBGO_EXTRACTED)/go/crypto/elliptic/elliptic.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/p224.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/p256.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/p256_generic.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/p384.go $(LIBGO_EXTRACTED)/go/crypto/elliptic/p521.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/doc.o: $(LIBGO_EXTRACTED)/go/go/doc/comment.go $(LIBGO_EXTRACTED)/go/go/doc/doc.go $(LIBGO_EXTRACTED)/go/go/doc/example.go $(LIBGO_EXTRACTED)/go/go/doc/exports.go $(LIBGO_EXTRACTED)/go/go/doc/filter.go $(LIBGO_EXTRACTED)/go/go/doc/reader.go $(LIBGO_EXTRACTED)/go/go/doc/synopsis.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/html/template.o: $(LIBGO_EXTRACTED)/go/html/template/attr.go $(LIBGO_EXTRACTED)/go/html/template/attr_string.go $(LIBGO_EXTRACTED)/go/html/template/content.go $(LIBGO_EXTRACTED)/go/html/template/context.go $(LIBGO_EXTRACTED)/go/html/template/css.go $(LIBGO_EXTRACTED)/go/html/template/delim_string.go $(LIBGO_EXTRACTED)/go/html/template/doc.go $(LIBGO_EXTRACTED)/go/html/template/element_string.go $(LIBGO_EXTRACTED)/go/html/template/error.go $(LIBGO_EXTRACTED)/go/html/template/escape.go $(LIBGO_EXTRACTED)/go/html/template/html.go $(LIBGO_EXTRACTED)/go/html/template/js.go $(LIBGO_EXTRACTED)/go/html/template/jsctx_string.go $(LIBGO_EXTRACTED)/go/html/template/state_string.go $(LIBGO_EXTRACTED)/go/html/template/template.go $(LIBGO_EXTRACTED)/go/html/template/transition.go $(LIBGO_EXTRACTED)/go/html/template/url.go $(LIBGO_EXTRACTED)/go/html/template/urlpart_string.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/x509/pkix.o: $(LIBGO_EXTRACTED)/go/crypto/x509/pkix/pkix.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/crypto/cryptobyte.o: $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/cryptobyte/asn1.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/cryptobyte/builder.go $(LIBGO_EXTRACTED)/go/golang.org/x/crypto/cryptobyte/string.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/format.o: $(LIBGO_EXTRACTED)/go/go/format/format.go $(LIBGO_EXTRACTED)/go/go/format/internal.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/ecdsa.o: $(LIBGO_EXTRACTED)/go/crypto/ecdsa/ecdsa.go $(LIBGO_EXTRACTED)/go/crypto/ecdsa/ecdsa_noasm.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/cfg.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/cfg/builder.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/cfg/cfg.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/build.o: $(LIBGO_EXTRACTED)/go/go/build/build.go $(LIBGO_EXTRACTED)/go/go/build/doc.go $(LIBGO_EXTRACTED)/go/go/build/gccgo.go $(LIBGO_EXTRACTED)/go/go/build/read.go $(LIBGO_EXTRACTED)/go/go/build/syslist.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/net/http/httpproxy.o: $(LIBGO_EXTRACTED)/go/golang.org/x/net/http/httpproxy/proxy.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/log/syslog.o: $(LIBGO_EXTRACTED)/go/log/syslog/doc.go $(LIBGO_EXTRACTED)/go/log/syslog/syslog.go $(LIBGO_EXTRACTED)/go/log/syslog/syslog_unix.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/internal/fuzz.o: $(LIBGO_EXTRACTED)/go/internal/fuzz/counters_supported.go $(LIBGO_EXTRACTED)/go/internal/fuzz/coverage.go $(LIBGO_EXTRACTED)/go/internal/fuzz/encoding.go $(LIBGO_EXTRACTED)/go/internal/fuzz/fuzz.go $(LIBGO_EXTRACTED)/go/internal/fuzz/mem.go $(LIBGO_EXTRACTED)/go/internal/fuzz/minimize.go $(LIBGO_EXTRACTED)/go/internal/fuzz/mutator.go $(LIBGO_EXTRACTED)/go/internal/fuzz/mutators_byteslice.go $(LIBGO_EXTRACTED)/go/internal/fuzz/pcg.go $(LIBGO_EXTRACTED)/go/internal/fuzz/queue.go $(LIBGO_EXTRACTED)/go/internal/fuzz/sys_posix.go $(LIBGO_EXTRACTED)/go/internal/fuzz/trace.go $(LIBGO_EXTRACTED)/go/internal/fuzz/worker.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/textproto.o: $(LIBGO_EXTRACTED)/go/net/textproto/header.go $(LIBGO_EXTRACTED)/go/net/textproto/pipeline.go $(LIBGO_EXTRACTED)/go/net/textproto/reader.go $(LIBGO_EXTRACTED)/go/net/textproto/textproto.go $(LIBGO_EXTRACTED)/go/net/textproto/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/net/nettest.o: $(LIBGO_EXTRACTED)/go/golang.org/x/net/nettest/conntest.go $(LIBGO_EXTRACTED)/go/golang.org/x/net/nettest/nettest.go $(LIBGO_EXTRACTED)/go/golang.org/x/net/nettest/nettest_unix.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/net/http/httpguts.o: $(LIBGO_EXTRACTED)/go/golang.org/x/net/http/httpguts/guts.go $(LIBGO_EXTRACTED)/go/golang.org/x/net/http/httpguts/httplex.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/mail.o: $(LIBGO_EXTRACTED)/go/net/mail/message.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/mime/multipart.o: $(LIBGO_EXTRACTED)/go/mime/multipart/formdata.go $(LIBGO_EXTRACTED)/go/mime/multipart/multipart.go $(LIBGO_EXTRACTED)/go/mime/multipart/writer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/x509.o: $(LIBGO_EXTRACTED)/go/crypto/x509/cert_pool.go $(LIBGO_EXTRACTED)/go/crypto/x509/parser.go $(LIBGO_EXTRACTED)/go/crypto/x509/pem_decrypt.go $(LIBGO_EXTRACTED)/go/crypto/x509/pkcs1.go $(LIBGO_EXTRACTED)/go/crypto/x509/pkcs8.go $(LIBGO_EXTRACTED)/go/crypto/x509/root.go $(LIBGO_EXTRACTED)/go/crypto/x509/root_linux.go $(LIBGO_EXTRACTED)/go/crypto/x509/root_unix.go $(LIBGO_EXTRACTED)/go/crypto/x509/sec1.go $(LIBGO_EXTRACTED)/go/crypto/x509/verify.go $(LIBGO_EXTRACTED)/go/crypto/x509/x509.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/testing/internal/testdeps.o: $(LIBGO_EXTRACTED)/go/testing/internal/testdeps/deps.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/types.o: $(LIBGO_EXTRACTED)/go/go/types/api.go $(LIBGO_EXTRACTED)/go/go/types/array.go $(LIBGO_EXTRACTED)/go/go/types/assignments.go $(LIBGO_EXTRACTED)/go/go/types/basic.go $(LIBGO_EXTRACTED)/go/go/types/builtins.go $(LIBGO_EXTRACTED)/go/go/types/call.go $(LIBGO_EXTRACTED)/go/go/types/chan.go $(LIBGO_EXTRACTED)/go/go/types/check.go $(LIBGO_EXTRACTED)/go/go/types/context.go $(LIBGO_EXTRACTED)/go/go/types/conversions.go $(LIBGO_EXTRACTED)/go/go/types/decl.go $(LIBGO_EXTRACTED)/go/go/types/errorcodes.go $(LIBGO_EXTRACTED)/go/go/types/errors.go $(LIBGO_EXTRACTED)/go/go/types/eval.go $(LIBGO_EXTRACTED)/go/go/types/expr.go $(LIBGO_EXTRACTED)/go/go/types/exprstring.go $(LIBGO_EXTRACTED)/go/go/types/index.go $(LIBGO_EXTRACTED)/go/go/types/infer.go $(LIBGO_EXTRACTED)/go/go/types/initorder.go $(LIBGO_EXTRACTED)/go/go/types/instantiate.go $(LIBGO_EXTRACTED)/go/go/types/interface.go $(LIBGO_EXTRACTED)/go/go/types/labels.go $(LIBGO_EXTRACTED)/go/go/types/lookup.go $(LIBGO_EXTRACTED)/go/go/types/map.go $(LIBGO_EXTRACTED)/go/go/types/methodlist.go $(LIBGO_EXTRACTED)/go/go/types/methodset.go $(LIBGO_EXTRACTED)/go/go/types/mono.go $(LIBGO_EXTRACTED)/go/go/types/named.go $(LIBGO_EXTRACTED)/go/go/types/object.go $(LIBGO_EXTRACTED)/go/go/types/objset.go $(LIBGO_EXTRACTED)/go/go/types/operand.go $(LIBGO_EXTRACTED)/go/go/types/package.go $(LIBGO_EXTRACTED)/go/go/types/pointer.go $(LIBGO_EXTRACTED)/go/go/types/predicates.go $(LIBGO_EXTRACTED)/go/go/types/resolver.go $(LIBGO_EXTRACTED)/go/go/types/return.go $(LIBGO_EXTRACTED)/go/go/types/scope.go $(LIBGO_EXTRACTED)/go/go/types/selection.go $(LIBGO_EXTRACTED)/go/go/types/signature.go $(LIBGO_EXTRACTED)/go/go/types/sizes.go $(LIBGO_EXTRACTED)/go/go/types/slice.go $(LIBGO_EXTRACTED)/go/go/types/stmt.go $(LIBGO_EXTRACTED)/go/go/types/struct.go $(LIBGO_EXTRACTED)/go/go/types/subst.go $(LIBGO_EXTRACTED)/go/go/types/termlist.go $(LIBGO_EXTRACTED)/go/go/types/tuple.go $(LIBGO_EXTRACTED)/go/go/types/type.go $(LIBGO_EXTRACTED)/go/go/types/typelists.go $(LIBGO_EXTRACTED)/go/go/types/typeparam.go $(LIBGO_EXTRACTED)/go/go/types/typeset.go $(LIBGO_EXTRACTED)/go/go/types/typestring.go $(LIBGO_EXTRACTED)/go/go/types/typeterm.go $(LIBGO_EXTRACTED)/go/go/types/typexpr.go $(LIBGO_EXTRACTED)/go/go/types/unify.go $(LIBGO_EXTRACTED)/go/go/types/union.go $(LIBGO_EXTRACTED)/go/go/types/universe.go $(LIBGO_EXTRACTED)/go/go/types/validtype.go $(LIBGO_EXTRACTED)/go/go/types/version.go $(LIBGO_BASE)/generated/gccgosizes.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/crypto/tls.o: $(LIBGO_EXTRACTED)/go/crypto/tls/alert.go $(LIBGO_EXTRACTED)/go/crypto/tls/auth.go $(LIBGO_EXTRACTED)/go/crypto/tls/cipher_suites.go $(LIBGO_EXTRACTED)/go/crypto/tls/common.go $(LIBGO_EXTRACTED)/go/crypto/tls/common_string.go $(LIBGO_EXTRACTED)/go/crypto/tls/conn.go $(LIBGO_EXTRACTED)/go/crypto/tls/handshake_client.go $(LIBGO_EXTRACTED)/go/crypto/tls/handshake_client_tls13.go $(LIBGO_EXTRACTED)/go/crypto/tls/handshake_messages.go $(LIBGO_EXTRACTED)/go/crypto/tls/handshake_server.go $(LIBGO_EXTRACTED)/go/crypto/tls/handshake_server_tls13.go $(LIBGO_EXTRACTED)/go/crypto/tls/key_agreement.go $(LIBGO_EXTRACTED)/go/crypto/tls/key_schedule.go $(LIBGO_EXTRACTED)/go/crypto/tls/prf.go $(LIBGO_EXTRACTED)/go/crypto/tls/ticket.go $(LIBGO_EXTRACTED)/go/crypto/tls/tls.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/http/httptrace.o: $(LIBGO_EXTRACTED)/go/net/http/httptrace/trace.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/smtp.o: $(LIBGO_EXTRACTED)/go/net/smtp/auth.go $(LIBGO_EXTRACTED)/go/net/smtp/smtp.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/internal/typeparams.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/internal/typeparams/common.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/internal/typeparams/enabled_go118.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/internal/typeparams/normalize.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/internal/typeparams/termlist.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/internal/typeparams/typeparams_go118.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/internal/typeparams/typeterm.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/internal/analysisutil.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/internal/analysisutil/util.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/internal/srcimporter.o: $(LIBGO_EXTRACTED)/go/go/internal/srcimporter/srcimporter.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/types/objectpath.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/types/objectpath/objectpath.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/ast/inspector.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/ast/inspector/inspector.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/ast/inspector/typeof.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/ast/astutil.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/ast/astutil/enclosing.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/ast/astutil/imports.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/ast/astutil/rewrite.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/ast/astutil/util.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/internal/gcimporter.o: $(LIBGO_EXTRACTED)/go/go/internal/gcimporter/exportdata.go $(LIBGO_EXTRACTED)/go/go/internal/gcimporter/gcimporter.go $(LIBGO_EXTRACTED)/go/go/internal/gcimporter/iimport.go $(LIBGO_EXTRACTED)/go/go/internal/gcimporter/support.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/internal/gccgoimporter.o: $(LIBGO_EXTRACTED)/go/go/internal/gccgoimporter/ar.go $(LIBGO_EXTRACTED)/go/go/internal/gccgoimporter/gccgoinstallation.go $(LIBGO_EXTRACTED)/go/go/internal/gccgoimporter/importer.go $(LIBGO_EXTRACTED)/go/go/internal/gccgoimporter/parser.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/types/typeutil.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/types/typeutil/callee.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/types/typeutil/imports.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/types/typeutil/map.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/types/typeutil/methodsetcache.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/types/typeutil/ui.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/internal/analysisinternal.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/internal/analysisinternal/analysis.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/analysis.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/diagnostic.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/doc.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/validate.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/go/importer.o: $(LIBGO_EXTRACTED)/go/go/importer/importer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/internal/facts.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/internal/facts/facts.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/internal/facts/imports.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/inspect.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/inspect/inspect.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/cgocall.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/cgocall/cgocall.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/framepointer.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/framepointer/framepointer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/internal/analysisflags.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/internal/analysisflags/flags.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/internal/analysisflags/help.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/tests.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/tests/tests.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/pkgfact.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/pkgfact/pkgfact.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/buildtag.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/buildtag/buildtag.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/asmdecl.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/asmdecl/asmdecl.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/atomic.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/atomic/atomic.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/ifaceassert.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/ifaceassert/ifaceassert.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/ifaceassert/parameterized.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/stdmethods.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/stdmethods/stdmethods.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/structtag.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/structtag/structtag.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/nilfunc.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/nilfunc/nilfunc.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/assign.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/assign/assign.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/composite.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/composite/composite.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/composite/whitelist.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/stringintconv.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/stringintconv/string.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/errorsas.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/errorsas/errorsas.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/sigchanyzer.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/sigchanyzer/sigchanyzer.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/bools.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/bools/bools.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/loopclosure.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/loopclosure/loopclosure.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/shift.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/shift/dead.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/shift/shift.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/unreachable.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/unreachable/unreachable.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/testinggoroutine.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/testinggoroutine/testinggoroutine.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/unsafeptr.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/unsafeptr/unsafeptr.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/copylock.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/copylock/copylock.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/printf.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/printf/printf.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/printf/types.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/ctrlflow.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/ctrlflow/ctrlflow.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/httpresponse.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/httpresponse/httpresponse.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/unusedresult.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/unusedresult/unusedresult.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/unmarshal.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/unmarshal/unmarshal.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/lostcancel.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/passes/lostcancel/lostcancel.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/unitchecker.o: $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/unitchecker/unitchecker.go $(LIBGO_EXTRACTED)/go/golang.org/x/tools/go/analysis/unitchecker/unitchecker112.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/http.o: $(LIBGO_EXTRACTED)/go/net/http/client.go $(LIBGO_EXTRACTED)/go/net/http/clone.go $(LIBGO_EXTRACTED)/go/net/http/cookie.go $(LIBGO_EXTRACTED)/go/net/http/doc.go $(LIBGO_EXTRACTED)/go/net/http/filetransport.go $(LIBGO_EXTRACTED)/go/net/http/fs.go $(LIBGO_EXTRACTED)/go/net/http/h2_bundle.go $(LIBGO_EXTRACTED)/go/net/http/header.go $(LIBGO_EXTRACTED)/go/net/http/http.go $(LIBGO_EXTRACTED)/go/net/http/jar.go $(LIBGO_EXTRACTED)/go/net/http/method.go $(LIBGO_EXTRACTED)/go/net/http/request.go $(LIBGO_EXTRACTED)/go/net/http/response.go $(LIBGO_EXTRACTED)/go/net/http/roundtrip.go $(LIBGO_EXTRACTED)/go/net/http/server.go $(LIBGO_EXTRACTED)/go/net/http/sniff.go $(LIBGO_EXTRACTED)/go/net/http/socks_bundle.go $(LIBGO_EXTRACTED)/go/net/http/status.go $(LIBGO_EXTRACTED)/go/net/http/transfer.go $(LIBGO_EXTRACTED)/go/net/http/transport.go $(LIBGO_EXTRACTED)/go/net/http/transport_default_other.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/golang.org/x/mod/sumdb.o: $(LIBGO_EXTRACTED)/go/golang.org/x/mod/sumdb/cache.go $(LIBGO_EXTRACTED)/go/golang.org/x/mod/sumdb/client.go $(LIBGO_EXTRACTED)/go/golang.org/x/mod/sumdb/server.go $(LIBGO_EXTRACTED)/go/golang.org/x/mod/sumdb/test.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/http/pprof.o: $(LIBGO_EXTRACTED)/go/net/http/pprof/pprof.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/expvar.o: $(LIBGO_EXTRACTED)/go/expvar/expvar.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/http/httptest.o: $(LIBGO_EXTRACTED)/go/net/http/httptest/httptest.go $(LIBGO_EXTRACTED)/go/net/http/httptest/recorder.go $(LIBGO_EXTRACTED)/go/net/http/httptest/server.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/http/cookiejar.o: $(LIBGO_EXTRACTED)/go/net/http/cookiejar/jar.go $(LIBGO_EXTRACTED)/go/net/http/cookiejar/punycode.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/http/cgi.o: $(LIBGO_EXTRACTED)/go/net/http/cgi/child.go $(LIBGO_EXTRACTED)/go/net/http/cgi/host.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/rpc.o: $(LIBGO_EXTRACTED)/go/net/rpc/client.go $(LIBGO_EXTRACTED)/go/net/rpc/debug.go $(LIBGO_EXTRACTED)/go/net/rpc/server.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/http/httputil.o: $(LIBGO_EXTRACTED)/go/net/http/httputil/dump.go $(LIBGO_EXTRACTED)/go/net/http/httputil/httputil.go $(LIBGO_EXTRACTED)/go/net/http/httputil/persist.go $(LIBGO_EXTRACTED)/go/net/http/httputil/reverseproxy.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/rpc/jsonrpc.o: $(LIBGO_EXTRACTED)/go/net/rpc/jsonrpc/client.go $(LIBGO_EXTRACTED)/go/net/rpc/jsonrpc/server.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))
$(LIBGO_BUILD)/net/http/fcgi.o: $(LIBGO_EXTRACTED)/go/net/http/fcgi/child.go $(LIBGO_EXTRACTED)/go/net/http/fcgi/fcgi.go
	$(call verbose_cmd,GO,libgo: $(notdir $@), cd $(LIBGO_EXTRACTED) && \
	mkdir -p $(dir $@) && \
	$(GOC) $(LIBGO_GOFLAGS) -c -fgo-pkgpath=$(subst $(LIBGO_BUILD)/,,$(@:.o=)) $^ -o $@ && \
	objcopy -j .go_export $@ $(@:.o=.gox))

LIBGO_OBJS += \
	$(LIBGO_BUILD)/golang.org/x/xerrors/internal.o \
	$(LIBGO_BUILD)/internal/goos.o \
	$(LIBGO_BUILD)/internal/goversion.o \
	$(LIBGO_BUILD)/internal/cfg.o \
	$(LIBGO_BUILD)/internal/goarch.o \
	$(LIBGO_BUILD)/encoding.o \
	$(LIBGO_BUILD)/internal/nettrace.o \
	$(LIBGO_BUILD)/reflect/internal/example1.o \
	$(LIBGO_BUILD)/internal/goexperiment.o \
	$(LIBGO_BUILD)/reflect/internal/example2.o \
	$(LIBGO_BUILD)/internal/unsafeheader.o \
	$(LIBGO_BUILD)/internal/abi.o \
	$(LIBGO_BUILD)/runtime/internal/syscall.o \
	$(LIBGO_BUILD)/golang.org/x/crypto/cryptobyte/asn1.o \
	$(LIBGO_BUILD)/internal/race.o \
	$(LIBGO_BUILD)/golang.org/x/crypto/internal/subtle.o \
	$(LIBGO_BUILD)/crypto/internal/subtle.o \
	$(LIBGO_BUILD)/internal/itoa.o \
	$(LIBGO_BUILD)/crypto/subtle.o \
	$(LIBGO_BUILD)/sync/atomic.o \
	$(LIBGO_BUILD)/container/ring.o \
	$(LIBGO_BUILD)/unicode/utf16.o \
	$(LIBGO_BUILD)/runtime/internal/math.o \
	$(LIBGO_BUILD)/container/list.o \
	$(LIBGO_BUILD)/runtime/internal/atomic.o \
	$(LIBGO_BUILD)/runtime/internal/sys.o \
	$(LIBGO_BUILD)/math/bits.o \
	$(LIBGO_BUILD)/internal/cpu.o \
	$(LIBGO_BUILD)/hash/maphash.o \
	$(LIBGO_BUILD)/unicode/utf8.o \
	$(LIBGO_BUILD)/image/color.o \
	$(LIBGO_BUILD)/internal/bytealg.o \
	$(LIBGO_BUILD)/image/color/palette.o \
	$(LIBGO_BUILD)/math.o \
	$(LIBGO_BUILD)/math/cmplx.o \
	$(LIBGO_BUILD)/unicode.o \
	$(LIBGO_BUILD)/runtime.o \
	$(LIBGO_BUILD)/runtime/metrics.o \
	$(LIBGO_BUILD)/sync.o \
	$(LIBGO_BUILD)/internal/reflectlite.o \
	$(LIBGO_BUILD)/runtime/cgo.o \
	$(LIBGO_BUILD)/internal/sysinfo.o \
	$(LIBGO_BUILD)/internal/testlog.o \
	$(LIBGO_BUILD)/internal/singleflight.o \
	$(LIBGO_BUILD)/math/rand.o \
	$(LIBGO_BUILD)/errors.o \
	$(LIBGO_BUILD)/internal/oserror.o \
	$(LIBGO_BUILD)/sort.o \
	$(LIBGO_BUILD)/path.o \
	$(LIBGO_BUILD)/io.o \
	$(LIBGO_BUILD)/golang.org/x/mod/semver.o \
	$(LIBGO_BUILD)/container/heap.o \
	$(LIBGO_BUILD)/hash.o \
	$(LIBGO_BUILD)/crypto/internal/randutil.o \
	$(LIBGO_BUILD)/hash/adler32.o \
	$(LIBGO_BUILD)/crypto/hmac.o \
	$(LIBGO_BUILD)/hash/crc64.o \
	$(LIBGO_BUILD)/text/tabwriter.o \
	$(LIBGO_BUILD)/hash/crc32.o \
	$(LIBGO_BUILD)/hash/fnv.o \
	$(LIBGO_BUILD)/strconv.o \
	$(LIBGO_BUILD)/golang.org/x/crypto/hkdf.o \
	$(LIBGO_BUILD)/golang.org/x/net/dns/dnsmessage.o \
	$(LIBGO_BUILD)/bytes.o \
	$(LIBGO_BUILD)/strings.o \
	$(LIBGO_BUILD)/crypto.o \
	$(LIBGO_BUILD)/crypto/rc4.o \
	$(LIBGO_BUILD)/encoding/ascii85.o \
	$(LIBGO_BUILD)/syscall.o \
	$(LIBGO_BUILD)/encoding/base32.o \
	$(LIBGO_BUILD)/net/http/internal/testcert.o \
	$(LIBGO_BUILD)/net/http/internal/ascii.o \
	$(LIBGO_BUILD)/golang.org/x/text/transform.o \
	$(LIBGO_BUILD)/html.o \
	$(LIBGO_BUILD)/go/build/constraint.o \
	$(LIBGO_BUILD)/bufio.o \
	$(LIBGO_BUILD)/crypto/elliptic/internal/fiat.o \
	$(LIBGO_BUILD)/compress/bzip2.o \
	$(LIBGO_BUILD)/regexp/syntax.o \
	$(LIBGO_BUILD)/image.o \
	$(LIBGO_BUILD)/reflect.o \
	$(LIBGO_BUILD)/internal/syscall/execenv.o \
	$(LIBGO_BUILD)/os/exec/internal/fdtest.o \
	$(LIBGO_BUILD)/internal/syscall/unix.o \
	$(LIBGO_BUILD)/image/internal/imageutil.o \
	$(LIBGO_BUILD)/time/tzdata.o \
	$(LIBGO_BUILD)/regexp.o \
	$(LIBGO_BUILD)/image/draw.o \
	$(LIBGO_BUILD)/time.o \
	$(LIBGO_BUILD)/image/jpeg.o \
	$(LIBGO_BUILD)/crypto/elliptic/internal/nistec.o \
	$(LIBGO_BUILD)/internal/fmtsort.o \
	$(LIBGO_BUILD)/context.o \
	$(LIBGO_BUILD)/encoding/binary.o \
	$(LIBGO_BUILD)/io/fs.o \
	$(LIBGO_BUILD)/golang.org/x/sync/semaphore.o \
	$(LIBGO_BUILD)/embed.o \
	$(LIBGO_BUILD)/internal/poll.o \
	$(LIBGO_BUILD)/golang.org/x/crypto/ed25519/internal/edwards25519.o \
	$(LIBGO_BUILD)/golang.org/x/crypto/poly1305.o \
	$(LIBGO_BUILD)/crypto/sha256.o \
	$(LIBGO_BUILD)/golang.org/x/crypto/internal/poly1305.o \
	$(LIBGO_BUILD)/crypto/ed25519/internal/edwards25519/field.o \
	$(LIBGO_BUILD)/crypto/md5.o \
	$(LIBGO_BUILD)/golang.org/x/crypto/curve25519/internal/field.o \
	$(LIBGO_BUILD)/crypto/sha1.o \
	$(LIBGO_BUILD)/crypto/sha512.o \
	$(LIBGO_BUILD)/encoding/base64.o \
	$(LIBGO_BUILD)/crypto/cipher.o \
	$(LIBGO_BUILD)/index/suffixarray.o \
	$(LIBGO_BUILD)/encoding/pem.o \
	$(LIBGO_BUILD)/crypto/aes.o \
	$(LIBGO_BUILD)/crypto/ed25519/internal/edwards25519.o \
	$(LIBGO_BUILD)/crypto/des.o \
	$(LIBGO_BUILD)/golang.org/x/crypto/chacha20.o \
	$(LIBGO_BUILD)/golang.org/x/crypto/chacha20poly1305.o \
	$(LIBGO_BUILD)/os.o \
	$(LIBGO_BUILD)/golang.org/x/mod/internal/lazyregexp.o \
	$(LIBGO_BUILD)/internal/godebug.o \
	$(LIBGO_BUILD)/internal/obscuretestdata.o \
	$(LIBGO_BUILD)/io/ioutil.o \
	$(LIBGO_BUILD)/internal/lazyregexp.o \
	$(LIBGO_BUILD)/os/signal.o \
	$(LIBGO_BUILD)/internal/intern.o \
	$(LIBGO_BUILD)/golang.org/x/sys/cpu.o \
	$(LIBGO_BUILD)/path/filepath.o \
	$(LIBGO_BUILD)/fmt.o \
	$(LIBGO_BUILD)/internal/goroot.o \
	$(LIBGO_BUILD)/net/netip.o \
	$(LIBGO_BUILD)/os/exec.o \
	$(LIBGO_BUILD)/golang.org/x/mod/sumdb/tlog.o \
	$(LIBGO_BUILD)/golang.org/x/tools/txtar.o \
	$(LIBGO_BUILD)/golang.org/x/tools/internal/lsp/fuzzy.o \
	$(LIBGO_BUILD)/golang.org/x/xerrors.o \
	$(LIBGO_BUILD)/os/signal/internal/pty.o \
	$(LIBGO_BUILD)/runtime/trace.o \
	$(LIBGO_BUILD)/net/http/internal.o \
	$(LIBGO_BUILD)/internal/execabs.o \
	$(LIBGO_BUILD)/mime/quotedprintable.o \
	$(LIBGO_BUILD)/internal/buildcfg.o \
	$(LIBGO_BUILD)/compress/lzw.o \
	$(LIBGO_BUILD)/encoding/hex.o \
	$(LIBGO_BUILD)/log.o \
	$(LIBGO_BUILD)/debug/plan9obj.o \
	$(LIBGO_BUILD)/database/sql/driver.o \
	$(LIBGO_BUILD)/os/user.o \
	$(LIBGO_BUILD)/golang.org/x/crypto/curve25519.o \
	$(LIBGO_BUILD)/encoding/csv.o \
	$(LIBGO_BUILD)/text/scanner.o \
	$(LIBGO_BUILD)/runtime/debug.o \
	$(LIBGO_BUILD)/net/internal/socktest.o \
	$(LIBGO_BUILD)/go/token.o \
	$(LIBGO_BUILD)/flag.o \
	$(LIBGO_BUILD)/golang.org/x/mod/module.o \
	$(LIBGO_BUILD)/golang.org/x/net/http2/hpack.o \
	$(LIBGO_BUILD)/mime.o \
	$(LIBGO_BUILD)/net/url.o \
	$(LIBGO_BUILD)/debug/gosym.o \
	$(LIBGO_BUILD)/testing/iotest.o \
	$(LIBGO_BUILD)/golang.org/x/mod/modfile.o \
	$(LIBGO_BUILD)/image/gif.o \
	$(LIBGO_BUILD)/compress/flate.o \
	$(LIBGO_BUILD)/testing/quick.o \
	$(LIBGO_BUILD)/go/scanner.o \
	$(LIBGO_BUILD)/golang.org/x/text/unicode/norm.o \
	$(LIBGO_BUILD)/text/template/parse.o \
	$(LIBGO_BUILD)/golang.org/x/text/unicode/bidi.o \
	$(LIBGO_BUILD)/internal/trace.o \
	$(LIBGO_BUILD)/encoding/xml.o \
	$(LIBGO_BUILD)/debug/dwarf.o \
	$(LIBGO_BUILD)/encoding/json.o \
	$(LIBGO_BUILD)/archive/tar.o \
	$(LIBGO_BUILD)/encoding/gob.o \
	$(LIBGO_BUILD)/database/sql.o \
	$(LIBGO_BUILD)/testing/fstest.o \
	$(LIBGO_BUILD)/golang.org/x/text/secure/bidirule.o \
	$(LIBGO_BUILD)/compress/zlib.o \
	$(LIBGO_BUILD)/compress/gzip.o \
	$(LIBGO_BUILD)/math/big.o \
	$(LIBGO_BUILD)/testing.o \
	$(LIBGO_BUILD)/go/ast.o \
	$(LIBGO_BUILD)/archive/zip.o \
	$(LIBGO_BUILD)/golang.org/x/net/idna.o \
	$(LIBGO_BUILD)/image/png.o \
	$(LIBGO_BUILD)/runtime/pprof.o \
	$(LIBGO_BUILD)/text/template.o \
	$(LIBGO_BUILD)/golang.org/x/mod/sumdb/dirhash.o \
	$(LIBGO_BUILD)/golang.org/x/mod/zip.o \
	$(LIBGO_BUILD)/internal/xcoff.o \
	$(LIBGO_BUILD)/debug/pe.o \
	$(LIBGO_BUILD)/debug/macho.o \
	$(LIBGO_BUILD)/go/internal/typeparams.o \
	$(LIBGO_BUILD)/debug/elf.o \
	$(LIBGO_BUILD)/internal/profile.o \
	$(LIBGO_BUILD)/net.o \
	$(LIBGO_BUILD)/internal/testenv.o \
	$(LIBGO_BUILD)/crypto/dsa.o \
	$(LIBGO_BUILD)/internal/lazytemplate.o \
	$(LIBGO_BUILD)/crypto/rand.o \
	$(LIBGO_BUILD)/go/printer.o \
	$(LIBGO_BUILD)/go/constant.o \
	$(LIBGO_BUILD)/crypto/ed25519.o \
	$(LIBGO_BUILD)/debug/buildinfo.o \
	$(LIBGO_BUILD)/golang.org/x/crypto/ed25519.o \
	$(LIBGO_BUILD)/encoding/asn1.o \
	$(LIBGO_BUILD)/golang.org/x/mod/sumdb/note.o \
	$(LIBGO_BUILD)/crypto/rsa.o \
	$(LIBGO_BUILD)/go/parser.o \
	$(LIBGO_BUILD)/crypto/elliptic.o \
	$(LIBGO_BUILD)/go/doc.o \
	$(LIBGO_BUILD)/html/template.o \
	$(LIBGO_BUILD)/crypto/x509/pkix.o \
	$(LIBGO_BUILD)/golang.org/x/crypto/cryptobyte.o \
	$(LIBGO_BUILD)/go/format.o \
	$(LIBGO_BUILD)/crypto/ecdsa.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/cfg.o \
	$(LIBGO_BUILD)/go/build.o \
	$(LIBGO_BUILD)/golang.org/x/net/http/httpproxy.o \
	$(LIBGO_BUILD)/log/syslog.o \
	$(LIBGO_BUILD)/internal/fuzz.o \
	$(LIBGO_BUILD)/net/textproto.o \
	$(LIBGO_BUILD)/golang.org/x/net/nettest.o \
	$(LIBGO_BUILD)/golang.org/x/net/http/httpguts.o \
	$(LIBGO_BUILD)/net/mail.o \
	$(LIBGO_BUILD)/mime/multipart.o \
	$(LIBGO_BUILD)/crypto/x509.o \
	$(LIBGO_BUILD)/testing/internal/testdeps.o \
	$(LIBGO_BUILD)/go/types.o \
	$(LIBGO_BUILD)/crypto/tls.o \
	$(LIBGO_BUILD)/net/http/httptrace.o \
	$(LIBGO_BUILD)/net/smtp.o \
	$(LIBGO_BUILD)/golang.org/x/tools/internal/typeparams.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/internal/analysisutil.o \
	$(LIBGO_BUILD)/go/internal/srcimporter.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/types/objectpath.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/ast/inspector.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/ast/astutil.o \
	$(LIBGO_BUILD)/go/internal/gcimporter.o \
	$(LIBGO_BUILD)/go/internal/gccgoimporter.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/types/typeutil.o \
	$(LIBGO_BUILD)/golang.org/x/tools/internal/analysisinternal.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis.o \
	$(LIBGO_BUILD)/go/importer.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/internal/facts.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/inspect.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/cgocall.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/framepointer.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/internal/analysisflags.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/tests.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/pkgfact.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/buildtag.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/asmdecl.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/atomic.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/ifaceassert.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/stdmethods.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/structtag.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/nilfunc.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/assign.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/composite.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/stringintconv.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/errorsas.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/sigchanyzer.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/bools.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/loopclosure.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/shift.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/unreachable.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/testinggoroutine.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/unsafeptr.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/copylock.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/printf.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/ctrlflow.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/httpresponse.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/unusedresult.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/unmarshal.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/passes/lostcancel.o \
	$(LIBGO_BUILD)/golang.org/x/tools/go/analysis/unitchecker.o \
	$(LIBGO_BUILD)/net/http.o \
	$(LIBGO_BUILD)/golang.org/x/mod/sumdb.o \
	$(LIBGO_BUILD)/net/http/pprof.o \
	$(LIBGO_BUILD)/expvar.o \
	$(LIBGO_BUILD)/net/http/httptest.o \
	$(LIBGO_BUILD)/net/http/cookiejar.o \
	$(LIBGO_BUILD)/net/http/cgi.o \
	$(LIBGO_BUILD)/net/rpc.o \
	$(LIBGO_BUILD)/net/http/httputil.o \
	$(LIBGO_BUILD)/net/rpc/jsonrpc.o \
	$(LIBGO_BUILD)/net/http/fcgi.o \
